/*
 * API.Seguradora
 * Serviços de Negócios expostos através de RESTful services, para integrações com parceiros e agilidade no desenvolvimento interno de softwares da companhia.
 *
 * OpenAPI spec version: v1
 * Contact: integracaosistemas@mongeralaegon.com.br
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 *
 * Swagger Codegen version: 2.4.9
 *
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', '../../src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require('../../src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.Apiseguradora);
  }
}(this, function(expect, Apiseguradora) {
  'use strict';

  var instance;

  describe('(package)', function() {
    describe('APISeguradoraContratoV1ModeloNegocioPoliticaDeAceitacao', function() {
      beforeEach(function() {
        instance = new Apiseguradora.APISeguradoraContratoV1ModeloNegocioPoliticaDeAceitacao();
      });

      it('should create an instance of APISeguradoraContratoV1ModeloNegocioPoliticaDeAceitacao', function() {
        // TODO: update the code to test APISeguradoraContratoV1ModeloNegocioPoliticaDeAceitacao
        expect(instance).to.be.a(Apiseguradora.APISeguradoraContratoV1ModeloNegocioPoliticaDeAceitacao);
      });

      it('should have the property codigoModeloProposta (base name: "codigoModeloProposta")', function() {
        // TODO: update the code to test the property codigoModeloProposta
        expect(instance).to.have.property('codigoModeloProposta');
        // expect(instance.codigoModeloProposta).to.be(expectedValueLiteral);
      });

      it('should have the property dataVigencia (base name: "dataVigencia")', function() {
        // TODO: update the code to test the property dataVigencia
        expect(instance).to.have.property('dataVigencia');
        // expect(instance.dataVigencia).to.be(expectedValueLiteral);
      });

      it('should have the property statusPoliticaAceitacao (base name: "statusPoliticaAceitacao")', function() {
        // TODO: update the code to test the property statusPoliticaAceitacao
        expect(instance).to.have.property('statusPoliticaAceitacao');
        // expect(instance.statusPoliticaAceitacao).to.be(expectedValueLiteral);
      });

      it('should have the property descricao (base name: "descricao")', function() {
        // TODO: update the code to test the property descricao
        expect(instance).to.have.property('descricao');
        // expect(instance.descricao).to.be(expectedValueLiteral);
      });

      it('should have the property minimoContribuicaoClientesNovos (base name: "minimoContribuicaoClientesNovos")', function() {
        // TODO: update the code to test the property minimoContribuicaoClientesNovos
        expect(instance).to.have.property('minimoContribuicaoClientesNovos');
        // expect(instance.minimoContribuicaoClientesNovos).to.be(expectedValueLiteral);
      });

      it('should have the property minimoContribuicaoClientesAntigos (base name: "minimoContribuicaoClientesAntigos")', function() {
        // TODO: update the code to test the property minimoContribuicaoClientesAntigos
        expect(instance).to.have.property('minimoContribuicaoClientesAntigos');
        // expect(instance.minimoContribuicaoClientesAntigos).to.be(expectedValueLiteral);
      });

      it('should have the property imcMinimoRecusa (base name: "imcMinimoRecusa")', function() {
        // TODO: update the code to test the property imcMinimoRecusa
        expect(instance).to.have.property('imcMinimoRecusa');
        // expect(instance.imcMinimoRecusa).to.be(expectedValueLiteral);
      });

      it('should have the property imcMinimoExame (base name: "imcMinimoExame")', function() {
        // TODO: update the code to test the property imcMinimoExame
        expect(instance).to.have.property('imcMinimoExame');
        // expect(instance.imcMinimoExame).to.be(expectedValueLiteral);
      });

      it('should have the property imcMaximoRecusa (base name: "imcMaximoRecusa")', function() {
        // TODO: update the code to test the property imcMaximoRecusa
        expect(instance).to.have.property('imcMaximoRecusa');
        // expect(instance.imcMaximoRecusa).to.be(expectedValueLiteral);
      });

      it('should have the property imcMaximoExame (base name: "imcMaximoExame")', function() {
        // TODO: update the code to test the property imcMaximoExame
        expect(instance).to.have.property('imcMaximoExame');
        // expect(instance.imcMaximoExame).to.be(expectedValueLiteral);
      });

      it('should have the property qtdeMaximaCigarrosRecusa (base name: "qtdeMaximaCigarrosRecusa")', function() {
        // TODO: update the code to test the property qtdeMaximaCigarrosRecusa
        expect(instance).to.have.property('qtdeMaximaCigarrosRecusa');
        // expect(instance.qtdeMaximaCigarrosRecusa).to.be(expectedValueLiteral);
      });

      it('should have the property qtdeMaximaCigarrosExame (base name: "qtdeMaximaCigarrosExame")', function() {
        // TODO: update the code to test the property qtdeMaximaCigarrosExame
        expect(instance).to.have.property('qtdeMaximaCigarrosExame');
        // expect(instance.qtdeMaximaCigarrosExame).to.be(expectedValueLiteral);
      });

      it('should have the property diasMaximoRecusa (base name: "diasMaximoRecusa")', function() {
        // TODO: update the code to test the property diasMaximoRecusa
        expect(instance).to.have.property('diasMaximoRecusa');
        // expect(instance.diasMaximoRecusa).to.be(expectedValueLiteral);
      });

      it('should have the property mesesEntreSubscricoes (base name: "mesesEntreSubscricoes")', function() {
        // TODO: update the code to test the property mesesEntreSubscricoes
        expect(instance).to.have.property('mesesEntreSubscricoes');
        // expect(instance.mesesEntreSubscricoes).to.be(expectedValueLiteral);
      });

      it('should have the property mesesEntreResgates (base name: "mesesEntreResgates")', function() {
        // TODO: update the code to test the property mesesEntreResgates
        expect(instance).to.have.property('mesesEntreResgates');
        // expect(instance.mesesEntreResgates).to.be(expectedValueLiteral);
      });

      it('should have the property mesesEntreReducoesContribuicao (base name: "mesesEntreReducoesContribuicao")', function() {
        // TODO: update the code to test the property mesesEntreReducoesContribuicao
        expect(instance).to.have.property('mesesEntreReducoesContribuicao');
        // expect(instance.mesesEntreReducoesContribuicao).to.be(expectedValueLiteral);
      });

      it('should have the property valorCapitalAcionarCoaf (base name: "valorCapitalAcionarCoaf")', function() {
        // TODO: update the code to test the property valorCapitalAcionarCoaf
        expect(instance).to.have.property('valorCapitalAcionarCoaf');
        // expect(instance.valorCapitalAcionarCoaf).to.be(expectedValueLiteral);
      });

      it('should have the property exigeConfirmacaoVenda (base name: "exigeConfirmacaoVenda")', function() {
        // TODO: update the code to test the property exigeConfirmacaoVenda
        expect(instance).to.have.property('exigeConfirmacaoVenda');
        // expect(instance.exigeConfirmacaoVenda).to.be(expectedValueLiteral);
      });

      it('should have the property dataCriacao (base name: "dataCriacao")', function() {
        // TODO: update the code to test the property dataCriacao
        expect(instance).to.have.property('dataCriacao');
        // expect(instance.dataCriacao).to.be(expectedValueLiteral);
      });

      it('should have the property dataInicioVigencia (base name: "dataInicioVigencia")', function() {
        // TODO: update the code to test the property dataInicioVigencia
        expect(instance).to.have.property('dataInicioVigencia');
        // expect(instance.dataInicioVigencia).to.be(expectedValueLiteral);
      });

      it('should have the property dataFimVigencia (base name: "dataFimVigencia")', function() {
        // TODO: update the code to test the property dataFimVigencia
        expect(instance).to.have.property('dataFimVigencia');
        // expect(instance.dataFimVigencia).to.be(expectedValueLiteral);
      });

      it('should have the property mesesEntreCancelamentos (base name: "mesesEntreCancelamentos")', function() {
        // TODO: update the code to test the property mesesEntreCancelamentos
        expect(instance).to.have.property('mesesEntreCancelamentos');
        // expect(instance.mesesEntreCancelamentos).to.be(expectedValueLiteral);
      });

      it('should have the property limitesOperacionais (base name: "limitesOperacionais")', function() {
        // TODO: update the code to test the property limitesOperacionais
        expect(instance).to.have.property('limitesOperacionais');
        // expect(instance.limitesOperacionais).to.be(expectedValueLiteral);
      });

    });
  });

}));
