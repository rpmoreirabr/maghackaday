/*
 * API.Seguradora
 * Serviços de Negócios expostos através de RESTful services, para integrações com parceiros e agilidade no desenvolvimento interno de softwares da companhia.
 *
 * OpenAPI spec version: v1
 * Contact: integracaosistemas@mongeralaegon.com.br
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 *
 * Swagger Codegen version: 2.4.9
 *
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', '../../src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require('../../src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.Apiseguradora);
  }
}(this, function(expect, Apiseguradora) {
  'use strict';

  var instance;

  describe('(package)', function() {
    describe('APISeguradoraContratoV1ModeloNegocioItemServicoSorteio', function() {
      beforeEach(function() {
        instance = new Apiseguradora.APISeguradoraContratoV1ModeloNegocioItemServicoSorteio();
      });

      it('should create an instance of APISeguradoraContratoV1ModeloNegocioItemServicoSorteio', function() {
        // TODO: update the code to test APISeguradoraContratoV1ModeloNegocioItemServicoSorteio
        expect(instance).to.be.a(Apiseguradora.APISeguradoraContratoV1ModeloNegocioItemServicoSorteio);
      });

      it('should have the property periodicidadeId (base name: "periodicidadeId")', function() {
        // TODO: update the code to test the property periodicidadeId
        expect(instance).to.have.property('periodicidadeId');
        // expect(instance.periodicidadeId).to.be(expectedValueLiteral);
      });

      it('should have the property centenaMilhar (base name: "centenaMilhar")', function() {
        // TODO: update the code to test the property centenaMilhar
        expect(instance).to.have.property('centenaMilhar');
        // expect(instance.centenaMilhar).to.be(expectedValueLiteral);
      });

      it('should have the property dezenaMilhar (base name: "dezenaMilhar")', function() {
        // TODO: update the code to test the property dezenaMilhar
        expect(instance).to.have.property('dezenaMilhar');
        // expect(instance.dezenaMilhar).to.be(expectedValueLiteral);
      });

      it('should have the property milhar (base name: "milhar")', function() {
        // TODO: update the code to test the property milhar
        expect(instance).to.have.property('milhar');
        // expect(instance.milhar).to.be(expectedValueLiteral);
      });

      it('should have the property centena (base name: "centena")', function() {
        // TODO: update the code to test the property centena
        expect(instance).to.have.property('centena');
        // expect(instance.centena).to.be(expectedValueLiteral);
      });

      it('should have the property dezena (base name: "dezena")', function() {
        // TODO: update the code to test the property dezena
        expect(instance).to.have.property('dezena');
        // expect(instance.dezena).to.be(expectedValueLiteral);
      });

      it('should have the property quotaCapitalizacao (base name: "quotaCapitalizacao")', function() {
        // TODO: update the code to test the property quotaCapitalizacao
        expect(instance).to.have.property('quotaCapitalizacao');
        // expect(instance.quotaCapitalizacao).to.be(expectedValueLiteral);
      });

      it('should have the property quotaSorteio (base name: "quotaSorteio")', function() {
        // TODO: update the code to test the property quotaSorteio
        expect(instance).to.have.property('quotaSorteio');
        // expect(instance.quotaSorteio).to.be(expectedValueLiteral);
      });

      it('should have the property taxaJuros (base name: "taxaJuros")', function() {
        // TODO: update the code to test the property taxaJuros
        expect(instance).to.have.property('taxaJuros');
        // expect(instance.taxaJuros).to.be(expectedValueLiteral);
      });

      it('should have the property qtdeSorteioMes (base name: "qtdeSorteioMes")', function() {
        // TODO: update the code to test the property qtdeSorteioMes
        expect(instance).to.have.property('qtdeSorteioMes');
        // expect(instance.qtdeSorteioMes).to.be(expectedValueLiteral);
      });

      it('should have the property valorSorteio (base name: "valorSorteio")', function() {
        // TODO: update the code to test the property valorSorteio
        expect(instance).to.have.property('valorSorteio');
        // expect(instance.valorSorteio).to.be(expectedValueLiteral);
      });

      it('should have the property valorLimiteInferiorSorteio (base name: "valorLimiteInferiorSorteio")', function() {
        // TODO: update the code to test the property valorLimiteInferiorSorteio
        expect(instance).to.have.property('valorLimiteInferiorSorteio');
        // expect(instance.valorLimiteInferiorSorteio).to.be(expectedValueLiteral);
      });

      it('should have the property valorLimiteSuperiorSorteio (base name: "valorLimiteSuperiorSorteio")', function() {
        // TODO: update the code to test the property valorLimiteSuperiorSorteio
        expect(instance).to.have.property('valorLimiteSuperiorSorteio');
        // expect(instance.valorLimiteSuperiorSorteio).to.be(expectedValueLiteral);
      });

      it('should have the property percentualCapital (base name: "percentualCapital")', function() {
        // TODO: update the code to test the property percentualCapital
        expect(instance).to.have.property('percentualCapital');
        // expect(instance.percentualCapital).to.be(expectedValueLiteral);
      });

      it('should have the property fatorContribuicaoCobertura (base name: "fatorContribuicaoCobertura")', function() {
        // TODO: update the code to test the property fatorContribuicaoCobertura
        expect(instance).to.have.property('fatorContribuicaoCobertura');
        // expect(instance.fatorContribuicaoCobertura).to.be(expectedValueLiteral);
      });

      it('should have the property numeroProcessoSorteio (base name: "numeroProcessoSorteio")', function() {
        // TODO: update the code to test the property numeroProcessoSorteio
        expect(instance).to.have.property('numeroProcessoSorteio');
        // expect(instance.numeroProcessoSorteio).to.be(expectedValueLiteral);
      });

      it('should have the property tipoLayoutArquivoSorteioId (base name: "tipoLayoutArquivoSorteioId")', function() {
        // TODO: update the code to test the property tipoLayoutArquivoSorteioId
        expect(instance).to.have.property('tipoLayoutArquivoSorteioId');
        // expect(instance.tipoLayoutArquivoSorteioId).to.be(expectedValueLiteral);
      });

    });
  });

}));
