/*
 * API.Seguradora
 * Serviços de Negócios expostos através de RESTful services, para integrações com parceiros e agilidade no desenvolvimento interno de softwares da companhia.
 *
 * OpenAPI spec version: v1
 * Contact: integracaosistemas@mongeralaegon.com.br
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 *
 * Swagger Codegen version: 2.4.9
 *
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', '../../src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require('../../src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.Apiseguradora);
  }
}(this, function(expect, Apiseguradora) {
  'use strict';

  var instance;

  describe('(package)', function() {
    describe('APISeguradoraImplementacaoServicoServicoRegraComissaoDadosComissionamentoTransformado', function() {
      beforeEach(function() {
        instance = new Apiseguradora.APISeguradoraImplementacaoServicoServicoRegraComissaoDadosComissionamentoTransformado();
      });

      it('should create an instance of APISeguradoraImplementacaoServicoServicoRegraComissaoDadosComissionamentoTransformado', function() {
        // TODO: update the code to test APISeguradoraImplementacaoServicoServicoRegraComissaoDadosComissionamentoTransformado
        expect(instance).to.be.a(Apiseguradora.APISeguradoraImplementacaoServicoServicoRegraComissaoDadosComissionamentoTransformado);
      });

      it('should have the property nome (base name: "Nome")', function() {
        // TODO: update the code to test the property nome
        expect(instance).to.have.property('nome');
        // expect(instance.nome).to.be(expectedValueLiteral);
      });

      it('should have the property tipoComissionamento (base name: "TipoComissionamento")', function() {
        // TODO: update the code to test the property tipoComissionamento
        expect(instance).to.have.property('tipoComissionamento');
        // expect(instance.tipoComissionamento).to.be(expectedValueLiteral);
      });

      it('should have the property detalheComissionamento (base name: "DetalheComissionamento")', function() {
        // TODO: update the code to test the property detalheComissionamento
        expect(instance).to.have.property('detalheComissionamento');
        // expect(instance.detalheComissionamento).to.be(expectedValueLiteral);
      });

      it('should have the property tipoPessoa (base name: "TipoPessoa")', function() {
        // TODO: update the code to test the property tipoPessoa
        expect(instance).to.have.property('tipoPessoa');
        // expect(instance.tipoPessoa).to.be(expectedValueLiteral);
      });

      it('should have the property numeroAlternativa (base name: "NumeroAlternativa")', function() {
        // TODO: update the code to test the property numeroAlternativa
        expect(instance).to.have.property('numeroAlternativa');
        // expect(instance.numeroAlternativa).to.be(expectedValueLiteral);
      });

      it('should have the property DG (base name: "DG")', function() {
        // TODO: update the code to test the property DG
        expect(instance).to.have.property('DG');
        // expect(instance.DG).to.be(expectedValueLiteral);
      });

      it('should have the property comissionamentos (base name: "Comissionamentos")', function() {
        // TODO: update the code to test the property comissionamentos
        expect(instance).to.have.property('comissionamentos');
        // expect(instance.comissionamentos).to.be(expectedValueLiteral);
      });

      it('should have the property faixasPercentuais (base name: "FaixasPercentuais")', function() {
        // TODO: update the code to test the property faixasPercentuais
        expect(instance).to.have.property('faixasPercentuais');
        // expect(instance.faixasPercentuais).to.be(expectedValueLiteral);
      });

    });
  });

}));
