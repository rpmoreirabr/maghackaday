/*
 * API.Seguradora
 * Serviços de Negócios expostos através de RESTful services, para integrações com parceiros e agilidade no desenvolvimento interno de softwares da companhia.
 *
 * OpenAPI spec version: v1
 * Contact: integracaosistemas@mongeralaegon.com.br
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 *
 * Swagger Codegen version: 2.4.9
 *
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', '../../src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require('../../src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.Apiseguradora);
  }
}(this, function(expect, Apiseguradora) {
  'use strict';

  var instance;

  describe('(package)', function() {
    describe('APISeguradoraContratoV1PropostaDadosCobranca', function() {
      beforeEach(function() {
        instance = new Apiseguradora.APISeguradoraContratoV1PropostaDadosCobranca();
      });

      it('should create an instance of APISeguradoraContratoV1PropostaDadosCobranca', function() {
        // TODO: update the code to test APISeguradoraContratoV1PropostaDadosCobranca
        expect(instance).to.be.a(Apiseguradora.APISeguradoraContratoV1PropostaDadosCobranca);
      });

      it('should have the property periodicidade (base name: "Periodicidade")', function() {
        // TODO: update the code to test the property periodicidade
        expect(instance).to.have.property('periodicidade');
        // expect(instance.periodicidade).to.be(expectedValueLiteral);
      });

      it('should have the property tipoCobranca (base name: "TipoCobranca")', function() {
        // TODO: update the code to test the property tipoCobranca
        expect(instance).to.have.property('tipoCobranca');
        // expect(instance.tipoCobranca).to.be(expectedValueLiteral);
      });

      it('should have the property diaVencimento (base name: "DiaVencimento")', function() {
        // TODO: update the code to test the property diaVencimento
        expect(instance).to.have.property('diaVencimento');
        // expect(instance.diaVencimento).to.be(expectedValueLiteral);
      });

      it('should have the property competenciaDebito (base name: "CompetenciaDebito")', function() {
        // TODO: update the code to test the property competenciaDebito
        expect(instance).to.have.property('competenciaDebito');
        // expect(instance.competenciaDebito).to.be(expectedValueLiteral);
      });

      it('should have the property numConvenio (base name: "NumConvenio")', function() {
        // TODO: update the code to test the property numConvenio
        expect(instance).to.have.property('numConvenio');
        // expect(instance.numConvenio).to.be(expectedValueLiteral);
      });

      it('should have the property idadePagamentoAntecipado (base name: "IdadePagamentoAntecipado")', function() {
        // TODO: update the code to test the property idadePagamentoAntecipado
        expect(instance).to.have.property('idadePagamentoAntecipado');
        // expect(instance.idadePagamentoAntecipado).to.be(expectedValueLiteral);
      });

      it('should have the property tempoPagamentoAntecipado (base name: "TempoPagamentoAntecipado")', function() {
        // TODO: update the code to test the property tempoPagamentoAntecipado
        expect(instance).to.have.property('tempoPagamentoAntecipado');
        // expect(instance.tempoPagamentoAntecipado).to.be(expectedValueLiteral);
      });

      it('should have the property debito (base name: "Debito")', function() {
        // TODO: update the code to test the property debito
        expect(instance).to.have.property('debito');
        // expect(instance.debito).to.be(expectedValueLiteral);
      });

      it('should have the property folha (base name: "Folha")', function() {
        // TODO: update the code to test the property folha
        expect(instance).to.have.property('folha');
        // expect(instance.folha).to.be(expectedValueLiteral);
      });

      it('should have the property cartao (base name: "Cartao")', function() {
        // TODO: update the code to test the property cartao
        expect(instance).to.have.property('cartao');
        // expect(instance.cartao).to.be(expectedValueLiteral);
      });

    });
  });

}));
