/*
 * API.Seguradora
 * Serviços de Negócios expostos através de RESTful services, para integrações com parceiros e agilidade no desenvolvimento interno de softwares da companhia.
 *
 * OpenAPI spec version: v1
 * Contact: integracaosistemas@mongeralaegon.com.br
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 *
 * Swagger Codegen version: 2.4.9
 *
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', '../../src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require('../../src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.Apiseguradora);
  }
}(this, function(expect, Apiseguradora) {
  'use strict';

  var instance;

  describe('(package)', function() {
    describe('APISeguradoraContratoV1SimulacaoSimulacaoProponente', function() {
      beforeEach(function() {
        instance = new Apiseguradora.APISeguradoraContratoV1SimulacaoSimulacaoProponente();
      });

      it('should create an instance of APISeguradoraContratoV1SimulacaoSimulacaoProponente', function() {
        // TODO: update the code to test APISeguradoraContratoV1SimulacaoSimulacaoProponente
        expect(instance).to.be.a(Apiseguradora.APISeguradoraContratoV1SimulacaoSimulacaoProponente);
      });

      it('should have the property tipoRelacaoSeguradoId (base name: "tipoRelacaoSeguradoId")', function() {
        // TODO: update the code to test the property tipoRelacaoSeguradoId
        expect(instance).to.have.property('tipoRelacaoSeguradoId');
        // expect(instance.tipoRelacaoSeguradoId).to.be(expectedValueLiteral);
      });

      it('should have the property nome (base name: "nome")', function() {
        // TODO: update the code to test the property nome
        expect(instance).to.have.property('nome');
        // expect(instance.nome).to.be(expectedValueLiteral);
      });

      it('should have the property cpf (base name: "cpf")', function() {
        // TODO: update the code to test the property cpf
        expect(instance).to.have.property('cpf');
        // expect(instance.cpf).to.be(expectedValueLiteral);
      });

      it('should have the property dataNascimento (base name: "dataNascimento")', function() {
        // TODO: update the code to test the property dataNascimento
        expect(instance).to.have.property('dataNascimento');
        // expect(instance.dataNascimento).to.be(expectedValueLiteral);
      });

      it('should have the property sexoId (base name: "sexoId")', function() {
        // TODO: update the code to test the property sexoId
        expect(instance).to.have.property('sexoId');
        // expect(instance.sexoId).to.be(expectedValueLiteral);
      });

      it('should have the property profissaoCbo (base name: "profissaoCbo")', function() {
        // TODO: update the code to test the property profissaoCbo
        expect(instance).to.have.property('profissaoCbo');
        // expect(instance.profissaoCbo).to.be(expectedValueLiteral);
      });

      it('should have the property renda (base name: "renda")', function() {
        // TODO: update the code to test the property renda
        expect(instance).to.have.property('renda');
        // expect(instance.renda).to.be(expectedValueLiteral);
      });

      it('should have the property uf (base name: "uf")', function() {
        // TODO: update the code to test the property uf
        expect(instance).to.have.property('uf');
        // expect(instance.uf).to.be(expectedValueLiteral);
      });

      it('should have the property origem (base name: "origem")', function() {
        // TODO: update the code to test the property origem
        expect(instance).to.have.property('origem');
        // expect(instance.origem).to.be(expectedValueLiteral);
      });

      it('should have the property patrimonio (base name: "patrimonio")', function() {
        // TODO: update the code to test the property patrimonio
        expect(instance).to.have.property('patrimonio');
        // expect(instance.patrimonio).to.be(expectedValueLiteral);
      });

      it('should have the property declaracaoIRId (base name: "declaracaoIRId")', function() {
        // TODO: update the code to test the property declaracaoIRId
        expect(instance).to.have.property('declaracaoIRId');
        // expect(instance.declaracaoIRId).to.be(expectedValueLiteral);
      });

      it('should have the property despesasEducacao (base name: "despesasEducacao")', function() {
        // TODO: update the code to test the property despesasEducacao
        expect(instance).to.have.property('despesasEducacao');
        // expect(instance.despesasEducacao).to.be(expectedValueLiteral);
      });

      it('should have the property despesasMensais (base name: "despesasMensais")', function() {
        // TODO: update the code to test the property despesasMensais
        expect(instance).to.have.property('despesasMensais');
        // expect(instance.despesasMensais).to.be(expectedValueLiteral);
      });

      it('should have the property formaContato (base name: "formaContato")', function() {
        // TODO: update the code to test the property formaContato
        expect(instance).to.have.property('formaContato');
        // expect(instance.formaContato).to.be(expectedValueLiteral);
      });

      it('should have the property emails (base name: "emails")', function() {
        // TODO: update the code to test the property emails
        expect(instance).to.have.property('emails');
        // expect(instance.emails).to.be(expectedValueLiteral);
      });

      it('should have the property historicoDoenca (base name: "historicoDoenca")', function() {
        // TODO: update the code to test the property historicoDoenca
        expect(instance).to.have.property('historicoDoenca');
        // expect(instance.historicoDoenca).to.be(expectedValueLiteral);
      });

      it('should have the property historicoDoencaFamiliar (base name: "historicoDoencaFamiliar")', function() {
        // TODO: update the code to test the property historicoDoencaFamiliar
        expect(instance).to.have.property('historicoDoencaFamiliar');
        // expect(instance.historicoDoencaFamiliar).to.be(expectedValueLiteral);
      });

      it('should have the property investimentos (base name: "investimentos")', function() {
        // TODO: update the code to test the property investimentos
        expect(instance).to.have.property('investimentos');
        // expect(instance.investimentos).to.be(expectedValueLiteral);
      });

      it('should have the property medicamentos (base name: "medicamentos")', function() {
        // TODO: update the code to test the property medicamentos
        expect(instance).to.have.property('medicamentos');
        // expect(instance.medicamentos).to.be(expectedValueLiteral);
      });

      it('should have the property telefones (base name: "telefones")', function() {
        // TODO: update the code to test the property telefones
        expect(instance).to.have.property('telefones');
        // expect(instance.telefones).to.be(expectedValueLiteral);
      });

      it('should have the property classeRisco (base name: "classeRisco")', function() {
        // TODO: update the code to test the property classeRisco
        expect(instance).to.have.property('classeRisco');
        // expect(instance.classeRisco).to.be(expectedValueLiteral);
      });

    });
  });

}));
