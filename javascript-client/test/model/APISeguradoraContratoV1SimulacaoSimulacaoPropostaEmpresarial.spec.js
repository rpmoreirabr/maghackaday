/*
 * API.Seguradora
 * Serviços de Negócios expostos através de RESTful services, para integrações com parceiros e agilidade no desenvolvimento interno de softwares da companhia.
 *
 * OpenAPI spec version: v1
 * Contact: integracaosistemas@mongeralaegon.com.br
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 *
 * Swagger Codegen version: 2.4.9
 *
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', '../../src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require('../../src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.Apiseguradora);
  }
}(this, function(expect, Apiseguradora) {
  'use strict';

  var instance;

  describe('(package)', function() {
    describe('APISeguradoraContratoV1SimulacaoSimulacaoPropostaEmpresarial', function() {
      beforeEach(function() {
        instance = new Apiseguradora.APISeguradoraContratoV1SimulacaoSimulacaoPropostaEmpresarial();
      });

      it('should create an instance of APISeguradoraContratoV1SimulacaoSimulacaoPropostaEmpresarial', function() {
        // TODO: update the code to test APISeguradoraContratoV1SimulacaoSimulacaoPropostaEmpresarial
        expect(instance).to.be.a(Apiseguradora.APISeguradoraContratoV1SimulacaoSimulacaoPropostaEmpresarial);
      });

      it('should have the property proponente (base name: "proponente")', function() {
        // TODO: update the code to test the property proponente
        expect(instance).to.have.property('proponente');
        // expect(instance.proponente).to.be(expectedValueLiteral);
      });

      it('should have the property capitalIndividual (base name: "capitalIndividual")', function() {
        // TODO: update the code to test the property capitalIndividual
        expect(instance).to.have.property('capitalIndividual');
        // expect(instance.capitalIndividual).to.be(expectedValueLiteral);
      });

      it('should have the property comissionamento (base name: "comissionamento")', function() {
        // TODO: update the code to test the property comissionamento
        expect(instance).to.have.property('comissionamento');
        // expect(instance.comissionamento).to.be(expectedValueLiteral);
      });

      it('should have the property quantidadeVidas (base name: "quantidadeVidas")', function() {
        // TODO: update the code to test the property quantidadeVidas
        expect(instance).to.have.property('quantidadeVidas');
        // expect(instance.quantidadeVidas).to.be(expectedValueLiteral);
      });

      it('should have the property uf (base name: "uf")', function() {
        // TODO: update the code to test the property uf
        expect(instance).to.have.property('uf');
        // expect(instance.uf).to.be(expectedValueLiteral);
      });

      it('should have the property modulos (base name: "modulos")', function() {
        // TODO: update the code to test the property modulos
        expect(instance).to.have.property('modulos');
        // expect(instance.modulos).to.be(expectedValueLiteral);
      });

      it('should have the property periodicidade (base name: "periodicidade")', function() {
        // TODO: update the code to test the property periodicidade
        expect(instance).to.have.property('periodicidade');
        // expect(instance.periodicidade).to.be(expectedValueLiteral);
      });

    });
  });

}));
