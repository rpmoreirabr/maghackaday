/*
 * API.Seguradora
 * Serviços de Negócios expostos através de RESTful services, para integrações com parceiros e agilidade no desenvolvimento interno de softwares da companhia.
 *
 * OpenAPI spec version: v1
 * Contact: integracaosistemas@mongeralaegon.com.br
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 *
 * Swagger Codegen version: 2.4.9
 *
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', '../../src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require('../../src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.Apiseguradora);
  }
}(this, function(expect, Apiseguradora) {
  'use strict';

  var instance;

  describe('(package)', function() {
    describe('APISeguradoraContratoV1ModeloPropostaModeloProposta', function() {
      beforeEach(function() {
        instance = new Apiseguradora.APISeguradoraContratoV1ModeloPropostaModeloProposta();
      });

      it('should create an instance of APISeguradoraContratoV1ModeloPropostaModeloProposta', function() {
        // TODO: update the code to test APISeguradoraContratoV1ModeloPropostaModeloProposta
        expect(instance).to.be.a(Apiseguradora.APISeguradoraContratoV1ModeloPropostaModeloProposta);
      });

      it('should have the property id (base name: "id")', function() {
        // TODO: update the code to test the property id
        expect(instance).to.have.property('id');
        // expect(instance.id).to.be(expectedValueLiteral);
      });

      it('should have the property nome (base name: "nome")', function() {
        // TODO: update the code to test the property nome
        expect(instance).to.have.property('nome');
        // expect(instance.nome).to.be(expectedValueLiteral);
      });

      it('should have the property descricaoModeloProposta (base name: "descricaoModeloProposta")', function() {
        // TODO: update the code to test the property descricaoModeloProposta
        expect(instance).to.have.property('descricaoModeloProposta');
        // expect(instance.descricaoModeloProposta).to.be(expectedValueLiteral);
      });

      it('should have the property dataUltimaAlteracao (base name: "dataUltimaAlteracao")', function() {
        // TODO: update the code to test the property dataUltimaAlteracao
        expect(instance).to.have.property('dataUltimaAlteracao');
        // expect(instance.dataUltimaAlteracao).to.be(expectedValueLiteral);
      });

      it('should have the property namespace (base name: "namespace")', function() {
        // TODO: update the code to test the property namespace
        expect(instance).to.have.property('namespace');
        // expect(instance.namespace).to.be(expectedValueLiteral);
      });

      it('should have the property formasPagamento (base name: "formasPagamento")', function() {
        // TODO: update the code to test the property formasPagamento
        expect(instance).to.have.property('formasPagamento');
        // expect(instance.formasPagamento).to.be(expectedValueLiteral);
      });

      it('should have the property diasVencimento (base name: "diasVencimento")', function() {
        // TODO: update the code to test the property diasVencimento
        expect(instance).to.have.property('diasVencimento');
        // expect(instance.diasVencimento).to.be(expectedValueLiteral);
      });

      it('should have the property periodicidades (base name: "periodicidades")', function() {
        // TODO: update the code to test the property periodicidades
        expect(instance).to.have.property('periodicidades');
        // expect(instance.periodicidades).to.be(expectedValueLiteral);
      });

      it('should have the property ticketMinimo (base name: "ticketMinimo")', function() {
        // TODO: update the code to test the property ticketMinimo
        expect(instance).to.have.property('ticketMinimo');
        // expect(instance.ticketMinimo).to.be(expectedValueLiteral);
      });

      it('should have the property politicaValidacao (base name: "politicaValidacao")', function() {
        // TODO: update the code to test the property politicaValidacao
        expect(instance).to.have.property('politicaValidacao');
        // expect(instance.politicaValidacao).to.be(expectedValueLiteral);
      });

      it('should have the property canalComercializacao (base name: "canalComercializacao")', function() {
        // TODO: update the code to test the property canalComercializacao
        expect(instance).to.have.property('canalComercializacao');
        // expect(instance.canalComercializacao).to.be(expectedValueLiteral);
      });

      it('should have the property grupo (base name: "grupo")', function() {
        // TODO: update the code to test the property grupo
        expect(instance).to.have.property('grupo');
        // expect(instance.grupo).to.be(expectedValueLiteral);
      });

    });
  });

}));
