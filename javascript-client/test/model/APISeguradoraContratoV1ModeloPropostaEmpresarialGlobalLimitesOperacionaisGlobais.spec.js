/*
 * API.Seguradora
 * Serviços de Negócios expostos através de RESTful services, para integrações com parceiros e agilidade no desenvolvimento interno de softwares da companhia.
 *
 * OpenAPI spec version: v1
 * Contact: integracaosistemas@mongeralaegon.com.br
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 *
 * Swagger Codegen version: 2.4.9
 *
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', '../../src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require('../../src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.Apiseguradora);
  }
}(this, function(expect, Apiseguradora) {
  'use strict';

  var instance;

  describe('(package)', function() {
    describe('APISeguradoraContratoV1ModeloPropostaEmpresarialGlobalLimitesOperacionaisGlobais', function() {
      beforeEach(function() {
        instance = new Apiseguradora.APISeguradoraContratoV1ModeloPropostaEmpresarialGlobalLimitesOperacionaisGlobais();
      });

      it('should create an instance of APISeguradoraContratoV1ModeloPropostaEmpresarialGlobalLimitesOperacionaisGlobais', function() {
        // TODO: update the code to test APISeguradoraContratoV1ModeloPropostaEmpresarialGlobalLimitesOperacionaisGlobais
        expect(instance).to.be.a(Apiseguradora.APISeguradoraContratoV1ModeloPropostaEmpresarialGlobalLimitesOperacionaisGlobais);
      });

      it('should have the property capitalMinimo (base name: "capitalMinimo")', function() {
        // TODO: update the code to test the property capitalMinimo
        expect(instance).to.have.property('capitalMinimo');
        // expect(instance.capitalMinimo).to.be(expectedValueLiteral);
      });

      it('should have the property capitalMaximoPrimeiraFatura (base name: "capitalMaximoPrimeiraFatura")', function() {
        // TODO: update the code to test the property capitalMaximoPrimeiraFatura
        expect(instance).to.have.property('capitalMaximoPrimeiraFatura');
        // expect(instance.capitalMaximoPrimeiraFatura).to.be(expectedValueLiteral);
      });

      it('should have the property capitalMaximoNovasInclusoes (base name: "capitalMaximoNovasInclusoes")', function() {
        // TODO: update the code to test the property capitalMaximoNovasInclusoes
        expect(instance).to.have.property('capitalMaximoNovasInclusoes');
        // expect(instance.capitalMaximoNovasInclusoes).to.be(expectedValueLiteral);
      });

      it('should have the property capitalMaximoAlteracoes (base name: "capitalMaximoAlteracoes")', function() {
        // TODO: update the code to test the property capitalMaximoAlteracoes
        expect(instance).to.have.property('capitalMaximoAlteracoes');
        // expect(instance.capitalMaximoAlteracoes).to.be(expectedValueLiteral);
      });

      it('should have the property capitalMaximoIndividual (base name: "capitalMaximoIndividual")', function() {
        // TODO: update the code to test the property capitalMaximoIndividual
        expect(instance).to.have.property('capitalMaximoIndividual');
        // expect(instance.capitalMaximoIndividual).to.be(expectedValueLiteral);
      });

      it('should have the property idadeMaximaPrimeiraFatura (base name: "idadeMaximaPrimeiraFatura")', function() {
        // TODO: update the code to test the property idadeMaximaPrimeiraFatura
        expect(instance).to.have.property('idadeMaximaPrimeiraFatura');
        // expect(instance.idadeMaximaPrimeiraFatura).to.be(expectedValueLiteral);
      });

      it('should have the property idadeMaximaAumentoCapital (base name: "idadeMaximaAumentoCapital")', function() {
        // TODO: update the code to test the property idadeMaximaAumentoCapital
        expect(instance).to.have.property('idadeMaximaAumentoCapital');
        // expect(instance.idadeMaximaAumentoCapital).to.be(expectedValueLiteral);
      });

      it('should have the property idadeMaximaDemaisFaturas (base name: "idadeMaximaDemaisFaturas")', function() {
        // TODO: update the code to test the property idadeMaximaDemaisFaturas
        expect(instance).to.have.property('idadeMaximaDemaisFaturas');
        // expect(instance.idadeMaximaDemaisFaturas).to.be(expectedValueLiteral);
      });

      it('should have the property idadeMinimaInclusao (base name: "idadeMinimaInclusao")', function() {
        // TODO: update the code to test the property idadeMinimaInclusao
        expect(instance).to.have.property('idadeMinimaInclusao');
        // expect(instance.idadeMinimaInclusao).to.be(expectedValueLiteral);
      });

      it('should have the property qtdeSalariosMultiploSalarial (base name: "qtdeSalariosMultiploSalarial")', function() {
        // TODO: update the code to test the property qtdeSalariosMultiploSalarial
        expect(instance).to.have.property('qtdeSalariosMultiploSalarial');
        // expect(instance.qtdeSalariosMultiploSalarial).to.be(expectedValueLiteral);
      });

      it('should have the property capitalUniforme (base name: "capitalUniforme")', function() {
        // TODO: update the code to test the property capitalUniforme
        expect(instance).to.have.property('capitalUniforme');
        // expect(instance.capitalUniforme).to.be(expectedValueLiteral);
      });

      it('should have the property capitalSeguradoMinimo (base name: "capitalSeguradoMinimo")', function() {
        // TODO: update the code to test the property capitalSeguradoMinimo
        expect(instance).to.have.property('capitalSeguradoMinimo');
        // expect(instance.capitalSeguradoMinimo).to.be(expectedValueLiteral);
      });

      it('should have the property capitalSeguradoMaximo (base name: "capitalSeguradoMaximo")', function() {
        // TODO: update the code to test the property capitalSeguradoMaximo
        expect(instance).to.have.property('capitalSeguradoMaximo');
        // expect(instance.capitalSeguradoMaximo).to.be(expectedValueLiteral);
      });

    });
  });

}));
