/*
 * API.Seguradora
 * Serviços de Negócios expostos através de RESTful services, para integrações com parceiros e agilidade no desenvolvimento interno de softwares da companhia.
 *
 * OpenAPI spec version: v1
 * Contact: integracaosistemas@mongeralaegon.com.br
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 *
 * Swagger Codegen version: 2.4.9
 *
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', '../../src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require('../../src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.Apiseguradora);
  }
}(this, function(expect, Apiseguradora) {
  'use strict';

  var instance;

  describe('(package)', function() {
    describe('APISeguradoraContratoV1PropostaResumoDaProposta', function() {
      beforeEach(function() {
        instance = new Apiseguradora.APISeguradoraContratoV1PropostaResumoDaProposta();
      });

      it('should create an instance of APISeguradoraContratoV1PropostaResumoDaProposta', function() {
        // TODO: update the code to test APISeguradoraContratoV1PropostaResumoDaProposta
        expect(instance).to.be.a(Apiseguradora.APISeguradoraContratoV1PropostaResumoDaProposta);
      });

      it('should have the property dataProtocolo (base name: "dataProtocolo")', function() {
        // TODO: update the code to test the property dataProtocolo
        expect(instance).to.have.property('dataProtocolo');
        // expect(instance.dataProtocolo).to.be(expectedValueLiteral);
      });

      it('should have the property modeloProposta (base name: "modeloProposta")', function() {
        // TODO: update the code to test the property modeloProposta
        expect(instance).to.have.property('modeloProposta');
        // expect(instance.modeloProposta).to.be(expectedValueLiteral);
      });

      it('should have the property valorProposta (base name: "valorProposta")', function() {
        // TODO: update the code to test the property valorProposta
        expect(instance).to.have.property('valorProposta');
        // expect(instance.valorProposta).to.be(expectedValueLiteral);
      });

      it('should have the property formaPagamento (base name: "formaPagamento")', function() {
        // TODO: update the code to test the property formaPagamento
        expect(instance).to.have.property('formaPagamento');
        // expect(instance.formaPagamento).to.be(expectedValueLiteral);
      });

      it('should have the property periodicidadeCobranca (base name: "periodicidadeCobranca")', function() {
        // TODO: update the code to test the property periodicidadeCobranca
        expect(instance).to.have.property('periodicidadeCobranca');
        // expect(instance.periodicidadeCobranca).to.be(expectedValueLiteral);
      });

      it('should have the property hierarquia (base name: "hierarquia")', function() {
        // TODO: update the code to test the property hierarquia
        expect(instance).to.have.property('hierarquia');
        // expect(instance.hierarquia).to.be(expectedValueLiteral);
      });

      it('should have the property proponente (base name: "proponente")', function() {
        // TODO: update the code to test the property proponente
        expect(instance).to.have.property('proponente');
        // expect(instance.proponente).to.be(expectedValueLiteral);
      });

      it('should have the property agendamentosmedicos (base name: "agendamentosmedicos")', function() {
        // TODO: update the code to test the property agendamentosmedicos
        expect(instance).to.have.property('agendamentosmedicos');
        // expect(instance.agendamentosmedicos).to.be(expectedValueLiteral);
      });

      it('should have the property mensagens (base name: "mensagens")', function() {
        // TODO: update the code to test the property mensagens
        expect(instance).to.have.property('mensagens');
        // expect(instance.mensagens).to.be(expectedValueLiteral);
      });

    });
  });

}));
