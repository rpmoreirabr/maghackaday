/*
 * API.Seguradora
 * Serviços de Negócios expostos através de RESTful services, para integrações com parceiros e agilidade no desenvolvimento interno de softwares da companhia.
 *
 * OpenAPI spec version: v1
 * Contact: integracaosistemas@mongeralaegon.com.br
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 *
 * Swagger Codegen version: 2.4.9
 *
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', '../../src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require('../../src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.Apiseguradora);
  }
}(this, function(expect, Apiseguradora) {
  'use strict';

  var instance;

  describe('(package)', function() {
    describe('APISeguradoraContratoV1ModeloNegocioProcessoSusepHistorico', function() {
      beforeEach(function() {
        instance = new Apiseguradora.APISeguradoraContratoV1ModeloNegocioProcessoSusepHistorico();
      });

      it('should create an instance of APISeguradoraContratoV1ModeloNegocioProcessoSusepHistorico', function() {
        // TODO: update the code to test APISeguradoraContratoV1ModeloNegocioProcessoSusepHistorico
        expect(instance).to.be.a(Apiseguradora.APISeguradoraContratoV1ModeloNegocioProcessoSusepHistorico);
      });

      it('should have the property numeroProcesso (base name: "numeroProcesso")', function() {
        // TODO: update the code to test the property numeroProcesso
        expect(instance).to.have.property('numeroProcesso');
        // expect(instance.numeroProcesso).to.be(expectedValueLiteral);
      });

      it('should have the property complementoNumeroProcesso (base name: "complementoNumeroProcesso")', function() {
        // TODO: update the code to test the property complementoNumeroProcesso
        expect(instance).to.have.property('complementoNumeroProcesso');
        // expect(instance.complementoNumeroProcesso).to.be(expectedValueLiteral);
      });

      it('should have the property reajusteAutomatico (base name: "reajusteAutomatico")', function() {
        // TODO: update the code to test the property reajusteAutomatico
        expect(instance).to.have.property('reajusteAutomatico');
        // expect(instance.reajusteAutomatico).to.be(expectedValueLiteral);
      });

      it('should have the property cancelaAutomatico (base name: "cancelaAutomatico")', function() {
        // TODO: update the code to test the property cancelaAutomatico
        expect(instance).to.have.property('cancelaAutomatico');
        // expect(instance.cancelaAutomatico).to.be(expectedValueLiteral);
      });

      it('should have the property vigenciaVitalicia (base name: "vigenciaVitalicia")', function() {
        // TODO: update the code to test the property vigenciaVitalicia
        expect(instance).to.have.property('vigenciaVitalicia');
        // expect(instance.vigenciaVitalicia).to.be(expectedValueLiteral);
      });

      it('should have the property vigenciaRenovavelAutomaticamente (base name: "vigenciaRenovavelAutomaticamente")', function() {
        // TODO: update the code to test the property vigenciaRenovavelAutomaticamente
        expect(instance).to.have.property('vigenciaRenovavelAutomaticamente');
        // expect(instance.vigenciaRenovavelAutomaticamente).to.be(expectedValueLiteral);
      });

      it('should have the property quantidadeRenovacoesAutomaticas (base name: "quantidadeRenovacoesAutomaticas")', function() {
        // TODO: update the code to test the property quantidadeRenovacoesAutomaticas
        expect(instance).to.have.property('quantidadeRenovacoesAutomaticas');
        // expect(instance.quantidadeRenovacoesAutomaticas).to.be(expectedValueLiteral);
      });

      it('should have the property vigenciaMesesRenovacoesAutomaticas (base name: "vigenciaMesesRenovacoesAutomaticas")', function() {
        // TODO: update the code to test the property vigenciaMesesRenovacoesAutomaticas
        expect(instance).to.have.property('vigenciaMesesRenovacoesAutomaticas');
        // expect(instance.vigenciaMesesRenovacoesAutomaticas).to.be(expectedValueLiteral);
      });

      it('should have the property vigenciaMesesRenovacoesNaoAutomaticas (base name: "vigenciaMesesRenovacoesNaoAutomaticas")', function() {
        // TODO: update the code to test the property vigenciaMesesRenovacoesNaoAutomaticas
        expect(instance).to.have.property('vigenciaMesesRenovacoesNaoAutomaticas');
        // expect(instance.vigenciaMesesRenovacoesNaoAutomaticas).to.be(expectedValueLiteral);
      });

      it('should have the property vigenciaIndependenteEntreCoberturas (base name: "vigenciaIndependenteEntreCoberturas")', function() {
        // TODO: update the code to test the property vigenciaIndependenteEntreCoberturas
        expect(instance).to.have.property('vigenciaIndependenteEntreCoberturas');
        // expect(instance.vigenciaIndependenteEntreCoberturas).to.be(expectedValueLiteral);
      });

      it('should have the property permiteRenovacao (base name: "permiteRenovacao")', function() {
        // TODO: update the code to test the property permiteRenovacao
        expect(instance).to.have.property('permiteRenovacao');
        // expect(instance.permiteRenovacao).to.be(expectedValueLiteral);
      });

      it('should have the property reenquadramentoAutomatico (base name: "reenquadramentoAutomatico")', function() {
        // TODO: update the code to test the property reenquadramentoAutomatico
        expect(instance).to.have.property('reenquadramentoAutomatico');
        // expect(instance.reenquadramentoAutomatico).to.be(expectedValueLiteral);
      });

    });
  });

}));
