/*
 * API.Seguradora
 * Serviços de Negócios expostos através de RESTful services, para integrações com parceiros e agilidade no desenvolvimento interno de softwares da companhia.
 *
 * OpenAPI spec version: v1
 * Contact: integracaosistemas@mongeralaegon.com.br
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 *
 * Swagger Codegen version: 2.4.9
 *
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', '../../src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require('../../src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.Apiseguradora);
  }
}(this, function(expect, Apiseguradora) {
  'use strict';

  var instance;

  describe('(package)', function() {
    describe('APISeguradoraContratoV1PropostaDadosProponente', function() {
      beforeEach(function() {
        instance = new Apiseguradora.APISeguradoraContratoV1PropostaDadosProponente();
      });

      it('should create an instance of APISeguradoraContratoV1PropostaDadosProponente', function() {
        // TODO: update the code to test APISeguradoraContratoV1PropostaDadosProponente
        expect(instance).to.be.a(Apiseguradora.APISeguradoraContratoV1PropostaDadosProponente);
      });

      it('should have the property matricula (base name: "Matricula")', function() {
        // TODO: update the code to test the property matricula
        expect(instance).to.have.property('matricula');
        // expect(instance.matricula).to.be(expectedValueLiteral);
      });

      it('should have the property nome (base name: "Nome")', function() {
        // TODO: update the code to test the property nome
        expect(instance).to.have.property('nome');
        // expect(instance.nome).to.be(expectedValueLiteral);
      });

      it('should have the property dtNascimento (base name: "DtNascimento")', function() {
        // TODO: update the code to test the property dtNascimento
        expect(instance).to.have.property('dtNascimento');
        // expect(instance.dtNascimento).to.be(expectedValueLiteral);
      });

      it('should have the property idade (base name: "Idade")', function() {
        // TODO: update the code to test the property idade
        expect(instance).to.have.property('idade');
        // expect(instance.idade).to.be(expectedValueLiteral);
      });

      it('should have the property sexo (base name: "Sexo")', function() {
        // TODO: update the code to test the property sexo
        expect(instance).to.have.property('sexo');
        // expect(instance.sexo).to.be(expectedValueLiteral);
      });

      it('should have the property estadoCivil (base name: "EstadoCivil")', function() {
        // TODO: update the code to test the property estadoCivil
        expect(instance).to.have.property('estadoCivil');
        // expect(instance.estadoCivil).to.be(expectedValueLiteral);
      });

      it('should have the property CPF (base name: "CPF")', function() {
        // TODO: update the code to test the property CPF
        expect(instance).to.have.property('CPF');
        // expect(instance.CPF).to.be(expectedValueLiteral);
      });

      it('should have the property titularCpf (base name: "TitularCpf")', function() {
        // TODO: update the code to test the property titularCpf
        expect(instance).to.have.property('titularCpf');
        // expect(instance.titularCpf).to.be(expectedValueLiteral);
      });

      it('should have the property email (base name: "Email")', function() {
        // TODO: update the code to test the property email
        expect(instance).to.have.property('email');
        // expect(instance.email).to.be(expectedValueLiteral);
      });

      it('should have the property resideBrasil (base name: "ResideBrasil")', function() {
        // TODO: update the code to test the property resideBrasil
        expect(instance).to.have.property('resideBrasil');
        // expect(instance.resideBrasil).to.be(expectedValueLiteral);
      });

      it('should have the property rendaMensal (base name: "RendaMensal")', function() {
        // TODO: update the code to test the property rendaMensal
        expect(instance).to.have.property('rendaMensal');
        // expect(instance.rendaMensal).to.be(expectedValueLiteral);
      });

      it('should have the property numFilhos (base name: "NumFilhos")', function() {
        // TODO: update the code to test the property numFilhos
        expect(instance).to.have.property('numFilhos');
        // expect(instance.numFilhos).to.be(expectedValueLiteral);
      });

      it('should have the property PPE (base name: "PPE")', function() {
        // TODO: update the code to test the property PPE
        expect(instance).to.have.property('PPE');
        // expect(instance.PPE).to.be(expectedValueLiteral);
      });

      it('should have the property documentos (base name: "Documentos")', function() {
        // TODO: update the code to test the property documentos
        expect(instance).to.have.property('documentos');
        // expect(instance.documentos).to.be(expectedValueLiteral);
      });

      it('should have the property tipoEnderecoCorrespondecia (base name: "TipoEnderecoCorrespondecia")', function() {
        // TODO: update the code to test the property tipoEnderecoCorrespondecia
        expect(instance).to.have.property('tipoEnderecoCorrespondecia');
        // expect(instance.tipoEnderecoCorrespondecia).to.be(expectedValueLiteral);
      });

      it('should have the property enderecos (base name: "Enderecos")', function() {
        // TODO: update the code to test the property enderecos
        expect(instance).to.have.property('enderecos');
        // expect(instance.enderecos).to.be(expectedValueLiteral);
      });

      it('should have the property telefones (base name: "Telefones")', function() {
        // TODO: update the code to test the property telefones
        expect(instance).to.have.property('telefones');
        // expect(instance.telefones).to.be(expectedValueLiteral);
      });

      it('should have the property profissao (base name: "Profissao")', function() {
        // TODO: update the code to test the property profissao
        expect(instance).to.have.property('profissao');
        // expect(instance.profissao).to.be(expectedValueLiteral);
      });

      it('should have the property conjuge (base name: "Conjuge")', function() {
        // TODO: update the code to test the property conjuge
        expect(instance).to.have.property('conjuge');
        // expect(instance.conjuge).to.be(expectedValueLiteral);
      });

      it('should have the property representanteLegal (base name: "RepresentanteLegal")', function() {
        // TODO: update the code to test the property representanteLegal
        expect(instance).to.have.property('representanteLegal');
        // expect(instance.representanteLegal).to.be(expectedValueLiteral);
      });

      it('should have the property parentescoCorretor (base name: "ParentescoCorretor")', function() {
        // TODO: update the code to test the property parentescoCorretor
        expect(instance).to.have.property('parentescoCorretor');
        // expect(instance.parentescoCorretor).to.be(expectedValueLiteral);
      });

    });
  });

}));
