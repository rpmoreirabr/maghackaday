/*
 * API.Seguradora
 * Serviços de Negócios expostos através de RESTful services, para integrações com parceiros e agilidade no desenvolvimento interno de softwares da companhia.
 *
 * OpenAPI spec version: v1
 * Contact: integracaosistemas@mongeralaegon.com.br
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 *
 * Swagger Codegen version: 2.4.9
 *
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', '../../src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require('../../src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.Apiseguradora);
  }
}(this, function(expect, Apiseguradora) {
  'use strict';

  var instance;

  describe('(package)', function() {
    describe('MongeralESBPessoaContratoV1DadosParceiro', function() {
      beforeEach(function() {
        instance = new Apiseguradora.MongeralESBPessoaContratoV1DadosParceiro();
      });

      it('should create an instance of MongeralESBPessoaContratoV1DadosParceiro', function() {
        // TODO: update the code to test MongeralESBPessoaContratoV1DadosParceiro
        expect(instance).to.be.a(Apiseguradora.MongeralESBPessoaContratoV1DadosParceiro);
      });

      it('should have the property pessoaId (base name: "PessoaId")', function() {
        // TODO: update the code to test the property pessoaId
        expect(instance).to.have.property('pessoaId');
        // expect(instance.pessoaId).to.be(expectedValueLiteral);
      });

      it('should have the property tipoPessoaId (base name: "TipoPessoaId")', function() {
        // TODO: update the code to test the property tipoPessoaId
        expect(instance).to.have.property('tipoPessoaId');
        // expect(instance.tipoPessoaId).to.be(expectedValueLiteral);
      });

      it('should have the property nome (base name: "Nome")', function() {
        // TODO: update the code to test the property nome
        expect(instance).to.have.property('nome');
        // expect(instance.nome).to.be(expectedValueLiteral);
      });

      it('should have the property observacao (base name: "Observacao")', function() {
        // TODO: update the code to test the property observacao
        expect(instance).to.have.property('observacao');
        // expect(instance.observacao).to.be(expectedValueLiteral);
      });

      it('should have the property inscricaoMunicipal (base name: "InscricaoMunicipal")', function() {
        // TODO: update the code to test the property inscricaoMunicipal
        expect(instance).to.have.property('inscricaoMunicipal');
        // expect(instance.inscricaoMunicipal).to.be(expectedValueLiteral);
      });

      it('should have the property possuiAuditoria (base name: "PossuiAuditoria")', function() {
        // TODO: update the code to test the property possuiAuditoria
        expect(instance).to.have.property('possuiAuditoria');
        // expect(instance.possuiAuditoria).to.be(expectedValueLiteral);
      });

      it('should have the property naturezaJuridicaId (base name: "NaturezaJuridicaId")', function() {
        // TODO: update the code to test the property naturezaJuridicaId
        expect(instance).to.have.property('naturezaJuridicaId');
        // expect(instance.naturezaJuridicaId).to.be(expectedValueLiteral);
      });

      it('should have the property razaoSocial (base name: "RazaoSocial")', function() {
        // TODO: update the code to test the property razaoSocial
        expect(instance).to.have.property('razaoSocial');
        // expect(instance.razaoSocial).to.be(expectedValueLiteral);
      });

      it('should have the property cnpj (base name: "Cnpj")', function() {
        // TODO: update the code to test the property cnpj
        expect(instance).to.have.property('cnpj');
        // expect(instance.cnpj).to.be(expectedValueLiteral);
      });

      it('should have the property inscricaoEstadual (base name: "InscricaoEstadual")', function() {
        // TODO: update the code to test the property inscricaoEstadual
        expect(instance).to.have.property('inscricaoEstadual');
        // expect(instance.inscricaoEstadual).to.be(expectedValueLiteral);
      });

      it('should have the property atividadeEconomicaPrincipal (base name: "AtividadeEconomicaPrincipal")', function() {
        // TODO: update the code to test the property atividadeEconomicaPrincipal
        expect(instance).to.have.property('atividadeEconomicaPrincipal');
        // expect(instance.atividadeEconomicaPrincipal).to.be(expectedValueLiteral);
      });

      it('should have the property dataAbertura (base name: "DataAbertura")', function() {
        // TODO: update the code to test the property dataAbertura
        expect(instance).to.have.property('dataAbertura');
        // expect(instance.dataAbertura).to.be(expectedValueLiteral);
      });

      it('should have the property dataEncerramento (base name: "DataEncerramento")', function() {
        // TODO: update the code to test the property dataEncerramento
        expect(instance).to.have.property('dataEncerramento');
        // expect(instance.dataEncerramento).to.be(expectedValueLiteral);
      });

      it('should have the property desobrigadaCnpj (base name: "DesobrigadaCnpj")', function() {
        // TODO: update the code to test the property desobrigadaCnpj
        expect(instance).to.have.property('desobrigadaCnpj');
        // expect(instance.desobrigadaCnpj).to.be(expectedValueLiteral);
      });

      it('should have the property cei (base name: "Cei")', function() {
        // TODO: update the code to test the property cei
        expect(instance).to.have.property('cei');
        // expect(instance.cei).to.be(expectedValueLiteral);
      });

      it('should have the property inscricaIss (base name: "InscricaIss")', function() {
        // TODO: update the code to test the property inscricaIss
        expect(instance).to.have.property('inscricaIss');
        // expect(instance.inscricaIss).to.be(expectedValueLiteral);
      });

      it('should have the property tipoRamoAtividadeId (base name: "TipoRamoAtividadeId")', function() {
        // TODO: update the code to test the property tipoRamoAtividadeId
        expect(instance).to.have.property('tipoRamoAtividadeId');
        // expect(instance.tipoRamoAtividadeId).to.be(expectedValueLiteral);
      });

      it('should have the property regimeTributarioDiferenciado (base name: "RegimeTributarioDiferenciado")', function() {
        // TODO: update the code to test the property regimeTributarioDiferenciado
        expect(instance).to.have.property('regimeTributarioDiferenciado');
        // expect(instance.regimeTributarioDiferenciado).to.be(expectedValueLiteral);
      });

      it('should have the property tipoAtividadeEconomicaId (base name: "TipoAtividadeEconomicaId")', function() {
        // TODO: update the code to test the property tipoAtividadeEconomicaId
        expect(instance).to.have.property('tipoAtividadeEconomicaId');
        // expect(instance.tipoAtividadeEconomicaId).to.be(expectedValueLiteral);
      });

      it('should have the property tipoAtividadeEconomica (base name: "TipoAtividadeEconomica")', function() {
        // TODO: update the code to test the property tipoAtividadeEconomica
        expect(instance).to.have.property('tipoAtividadeEconomica');
        // expect(instance.tipoAtividadeEconomica).to.be(expectedValueLiteral);
      });

      it('should have the property atividadeEconomicaSecundaria (base name: "AtividadeEconomicaSecundaria")', function() {
        // TODO: update the code to test the property atividadeEconomicaSecundaria
        expect(instance).to.have.property('atividadeEconomicaSecundaria');
        // expect(instance.atividadeEconomicaSecundaria).to.be(expectedValueLiteral);
      });

      it('should have the property faturamentoUltimoExercicio (base name: "FaturamentoUltimoExercicio")', function() {
        // TODO: update the code to test the property faturamentoUltimoExercicio
        expect(instance).to.have.property('faturamentoUltimoExercicio');
        // expect(instance.faturamentoUltimoExercicio).to.be(expectedValueLiteral);
      });

      it('should have the property resultadoUltimoExercicio (base name: "ResultadoUltimoExercicio")', function() {
        // TODO: update the code to test the property resultadoUltimoExercicio
        expect(instance).to.have.property('resultadoUltimoExercicio');
        // expect(instance.resultadoUltimoExercicio).to.be(expectedValueLiteral);
      });

      it('should have the property anoUltimoExercicio (base name: "AnoUltimoExercicio")', function() {
        // TODO: update the code to test the property anoUltimoExercicio
        expect(instance).to.have.property('anoUltimoExercicio');
        // expect(instance.anoUltimoExercicio).to.be(expectedValueLiteral);
      });

      it('should have the property responsavelCeiPessoaId (base name: "ResponsavelCeiPessoaId")', function() {
        // TODO: update the code to test the property responsavelCeiPessoaId
        expect(instance).to.have.property('responsavelCeiPessoaId');
        // expect(instance.responsavelCeiPessoaId).to.be(expectedValueLiteral);
      });

      it('should have the property tiposParceiro (base name: "TiposParceiro")', function() {
        // TODO: update the code to test the property tiposParceiro
        expect(instance).to.have.property('tiposParceiro');
        // expect(instance.tiposParceiro).to.be(expectedValueLiteral);
      });

      it('should have the property corPrimaria (base name: "CorPrimaria")', function() {
        // TODO: update the code to test the property corPrimaria
        expect(instance).to.have.property('corPrimaria');
        // expect(instance.corPrimaria).to.be(expectedValueLiteral);
      });

      it('should have the property corSecundaria (base name: "CorSecundaria")', function() {
        // TODO: update the code to test the property corSecundaria
        expect(instance).to.have.property('corSecundaria');
        // expect(instance.corSecundaria).to.be(expectedValueLiteral);
      });

      it('should have the property urlLogoPositivo (base name: "UrlLogoPositivo")', function() {
        // TODO: update the code to test the property urlLogoPositivo
        expect(instance).to.have.property('urlLogoPositivo');
        // expect(instance.urlLogoPositivo).to.be(expectedValueLiteral);
      });

      it('should have the property urlLogoNegativo (base name: "UrlLogoNegativo")', function() {
        // TODO: update the code to test the property urlLogoNegativo
        expect(instance).to.have.property('urlLogoNegativo');
        // expect(instance.urlLogoNegativo).to.be(expectedValueLiteral);
      });

      it('should have the property urlImagemTopo (base name: "UrlImagemTopo")', function() {
        // TODO: update the code to test the property urlImagemTopo
        expect(instance).to.have.property('urlImagemTopo');
        // expect(instance.urlImagemTopo).to.be(expectedValueLiteral);
      });

      it('should have the property urlImagemServico (base name: "UrlImagemServico")', function() {
        // TODO: update the code to test the property urlImagemServico
        expect(instance).to.have.property('urlImagemServico');
        // expect(instance.urlImagemServico).to.be(expectedValueLiteral);
      });

    });
  });

}));
