/*
 * API.Seguradora
 * Serviços de Negócios expostos através de RESTful services, para integrações com parceiros e agilidade no desenvolvimento interno de softwares da companhia.
 *
 * OpenAPI spec version: v1
 * Contact: integracaosistemas@mongeralaegon.com.br
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 *
 * Swagger Codegen version: 2.4.9
 *
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', '../../src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require('../../src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.Apiseguradora);
  }
}(this, function(expect, Apiseguradora) {
  'use strict';

  var instance;

  describe('(package)', function() {
    describe('APISeguradoraContratoV1ModeloPropostaEmpresarialGlobalModeloPropostaEmpresarialGlobal', function() {
      beforeEach(function() {
        instance = new Apiseguradora.APISeguradoraContratoV1ModeloPropostaEmpresarialGlobalModeloPropostaEmpresarialGlobal();
      });

      it('should create an instance of APISeguradoraContratoV1ModeloPropostaEmpresarialGlobalModeloPropostaEmpresarialGlobal', function() {
        // TODO: update the code to test APISeguradoraContratoV1ModeloPropostaEmpresarialGlobalModeloPropostaEmpresarialGlobal
        expect(instance).to.be.a(Apiseguradora.APISeguradoraContratoV1ModeloPropostaEmpresarialGlobalModeloPropostaEmpresarialGlobal);
      });

      it('should have the property cnpjParceiro (base name: "cnpjParceiro")', function() {
        // TODO: update the code to test the property cnpjParceiro
        expect(instance).to.have.property('cnpjParceiro');
        // expect(instance.cnpjParceiro).to.be(expectedValueLiteral);
      });

      it('should have the property codigoModeloProposta (base name: "codigoModeloProposta")', function() {
        // TODO: update the code to test the property codigoModeloProposta
        expect(instance).to.have.property('codigoModeloProposta');
        // expect(instance.codigoModeloProposta).to.be(expectedValueLiteral);
      });

      it('should have the property numeroContrato (base name: "numeroContrato")', function() {
        // TODO: update the code to test the property numeroContrato
        expect(instance).to.have.property('numeroContrato');
        // expect(instance.numeroContrato).to.be(expectedValueLiteral);
      });

      it('should have the property numeroApolice (base name: "numeroApolice")', function() {
        // TODO: update the code to test the property numeroApolice
        expect(instance).to.have.property('numeroApolice');
        // expect(instance.numeroApolice).to.be(expectedValueLiteral);
      });

      it('should have the property dataInicioParceria (base name: "dataInicioParceria")', function() {
        // TODO: update the code to test the property dataInicioParceria
        expect(instance).to.have.property('dataInicioParceria');
        // expect(instance.dataInicioParceria).to.be(expectedValueLiteral);
      });

      it('should have the property classeGrupoSeguravel (base name: "classeGrupoSeguravel")', function() {
        // TODO: update the code to test the property classeGrupoSeguravel
        expect(instance).to.have.property('classeGrupoSeguravel');
        // expect(instance.classeGrupoSeguravel).to.be(expectedValueLiteral);
      });

      it('should have the property origemContrato (base name: "origemContrato")', function() {
        // TODO: update the code to test the property origemContrato
        expect(instance).to.have.property('origemContrato');
        // expect(instance.origemContrato).to.be(expectedValueLiteral);
      });

      it('should have the property gruposDeElegibilidade (base name: "gruposDeElegibilidade")', function() {
        // TODO: update the code to test the property gruposDeElegibilidade
        expect(instance).to.have.property('gruposDeElegibilidade');
        // expect(instance.gruposDeElegibilidade).to.be(expectedValueLiteral);
      });

      it('should have the property condicaoOperacional (base name: "condicaoOperacional")', function() {
        // TODO: update the code to test the property condicaoOperacional
        expect(instance).to.have.property('condicaoOperacional');
        // expect(instance.condicaoOperacional).to.be(expectedValueLiteral);
      });

    });
  });

}));
