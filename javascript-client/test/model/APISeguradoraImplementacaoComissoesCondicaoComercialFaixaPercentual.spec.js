/*
 * API.Seguradora
 * Serviços de Negócios expostos através de RESTful services, para integrações com parceiros e agilidade no desenvolvimento interno de softwares da companhia.
 *
 * OpenAPI spec version: v1
 * Contact: integracaosistemas@mongeralaegon.com.br
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 *
 * Swagger Codegen version: 2.4.9
 *
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', '../../src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require('../../src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.Apiseguradora);
  }
}(this, function(expect, Apiseguradora) {
  'use strict';

  var instance;

  describe('(package)', function() {
    describe('APISeguradoraImplementacaoComissoesCondicaoComercialFaixaPercentual', function() {
      beforeEach(function() {
        instance = new Apiseguradora.APISeguradoraImplementacaoComissoesCondicaoComercialFaixaPercentual();
      });

      it('should create an instance of APISeguradoraImplementacaoComissoesCondicaoComercialFaixaPercentual', function() {
        // TODO: update the code to test APISeguradoraImplementacaoComissoesCondicaoComercialFaixaPercentual
        expect(instance).to.be.a(Apiseguradora.APISeguradoraImplementacaoComissoesCondicaoComercialFaixaPercentual);
      });

      it('should have the property tipoAngariacao (base name: "TipoAngariacao")', function() {
        // TODO: update the code to test the property tipoAngariacao
        expect(instance).to.have.property('tipoAngariacao');
        // expect(instance.tipoAngariacao).to.be(expectedValueLiteral);
      });

      it('should have the property tipoFatoGeradorComissao (base name: "TipoFatoGeradorComissao")', function() {
        // TODO: update the code to test the property tipoFatoGeradorComissao
        expect(instance).to.have.property('tipoFatoGeradorComissao');
        // expect(instance.tipoFatoGeradorComissao).to.be(expectedValueLiteral);
      });

      it('should have the property tipoFaixaPercentual (base name: "TipoFaixaPercentual")', function() {
        // TODO: update the code to test the property tipoFaixaPercentual
        expect(instance).to.have.property('tipoFaixaPercentual');
        // expect(instance.tipoFaixaPercentual).to.be(expectedValueLiteral);
      });

      it('should have the property valorInicial (base name: "ValorInicial")', function() {
        // TODO: update the code to test the property valorInicial
        expect(instance).to.have.property('valorInicial');
        // expect(instance.valorInicial).to.be(expectedValueLiteral);
      });

      it('should have the property valorFinal (base name: "ValorFinal")', function() {
        // TODO: update the code to test the property valorFinal
        expect(instance).to.have.property('valorFinal');
        // expect(instance.valorFinal).to.be(expectedValueLiteral);
      });

      it('should have the property percentual (base name: "Percentual")', function() {
        // TODO: update the code to test the property percentual
        expect(instance).to.have.property('percentual');
        // expect(instance.percentual).to.be(expectedValueLiteral);
      });

      it('should have the property periodicidade (base name: "Periodicidade")', function() {
        // TODO: update the code to test the property periodicidade
        expect(instance).to.have.property('periodicidade');
        // expect(instance.periodicidade).to.be(expectedValueLiteral);
      });

      it('should have the property valorMinimo (base name: "ValorMinimo")', function() {
        // TODO: update the code to test the property valorMinimo
        expect(instance).to.have.property('valorMinimo');
        // expect(instance.valorMinimo).to.be(expectedValueLiteral);
      });

    });
  });

}));
