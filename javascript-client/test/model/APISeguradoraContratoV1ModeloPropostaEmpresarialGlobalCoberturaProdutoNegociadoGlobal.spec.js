/*
 * API.Seguradora
 * Serviços de Negócios expostos através de RESTful services, para integrações com parceiros e agilidade no desenvolvimento interno de softwares da companhia.
 *
 * OpenAPI spec version: v1
 * Contact: integracaosistemas@mongeralaegon.com.br
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 *
 * Swagger Codegen version: 2.4.9
 *
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', '../../src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require('../../src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.Apiseguradora);
  }
}(this, function(expect, Apiseguradora) {
  'use strict';

  var instance;

  describe('(package)', function() {
    describe('APISeguradoraContratoV1ModeloPropostaEmpresarialGlobalCoberturaProdutoNegociadoGlobal', function() {
      beforeEach(function() {
        instance = new Apiseguradora.APISeguradoraContratoV1ModeloPropostaEmpresarialGlobalCoberturaProdutoNegociadoGlobal();
      });

      it('should create an instance of APISeguradoraContratoV1ModeloPropostaEmpresarialGlobalCoberturaProdutoNegociadoGlobal', function() {
        // TODO: update the code to test APISeguradoraContratoV1ModeloPropostaEmpresarialGlobalCoberturaProdutoNegociadoGlobal
        expect(instance).to.be.a(Apiseguradora.APISeguradoraContratoV1ModeloPropostaEmpresarialGlobalCoberturaProdutoNegociadoGlobal);
      });

      it('should have the property coberturaReferencia (base name: "coberturaReferencia")', function() {
        // TODO: update the code to test the property coberturaReferencia
        expect(instance).to.have.property('coberturaReferencia');
        // expect(instance.coberturaReferencia).to.be(expectedValueLiteral);
      });

      it('should have the property coberturaOpcional (base name: "coberturaOpcional")', function() {
        // TODO: update the code to test the property coberturaOpcional
        expect(instance).to.have.property('coberturaOpcional');
        // expect(instance.coberturaOpcional).to.be(expectedValueLiteral);
      });

      it('should have the property possuiCapitalIndependente (base name: "possuiCapitalIndependente")', function() {
        // TODO: update the code to test the property possuiCapitalIndependente
        expect(instance).to.have.property('possuiCapitalIndependente');
        // expect(instance.possuiCapitalIndependente).to.be(expectedValueLiteral);
      });

      it('should have the property dataInicioComercializacao (base name: "dataInicioComercializacao")', function() {
        // TODO: update the code to test the property dataInicioComercializacao
        expect(instance).to.have.property('dataInicioComercializacao');
        // expect(instance.dataInicioComercializacao).to.be(expectedValueLiteral);
      });

      it('should have the property dataFimComercializacao (base name: "dataFimComercializacao")', function() {
        // TODO: update the code to test the property dataFimComercializacao
        expect(instance).to.have.property('dataFimComercializacao');
        // expect(instance.dataFimComercializacao).to.be(expectedValueLiteral);
      });

      it('should have the property capitalMinimo (base name: "capitalMinimo")', function() {
        // TODO: update the code to test the property capitalMinimo
        expect(instance).to.have.property('capitalMinimo');
        // expect(instance.capitalMinimo).to.be(expectedValueLiteral);
      });

      it('should have the property capitalMaximo (base name: "capitalMaximo")', function() {
        // TODO: update the code to test the property capitalMaximo
        expect(instance).to.have.property('capitalMaximo');
        // expect(instance.capitalMaximo).to.be(expectedValueLiteral);
      });

      it('should have the property idadeMinima (base name: "idadeMinima")', function() {
        // TODO: update the code to test the property idadeMinima
        expect(instance).to.have.property('idadeMinima');
        // expect(instance.idadeMinima).to.be(expectedValueLiteral);
      });

      it('should have the property idadeMaxima (base name: "idadeMaxima")', function() {
        // TODO: update the code to test the property idadeMaxima
        expect(instance).to.have.property('idadeMaxima');
        // expect(instance.idadeMaxima).to.be(expectedValueLiteral);
      });

      it('should have the property limiteMinimo (base name: "limiteMinimo")', function() {
        // TODO: update the code to test the property limiteMinimo
        expect(instance).to.have.property('limiteMinimo');
        // expect(instance.limiteMinimo).to.be(expectedValueLiteral);
      });

      it('should have the property limiteMaximo (base name: "limiteMaximo")', function() {
        // TODO: update the code to test the property limiteMaximo
        expect(instance).to.have.property('limiteMaximo');
        // expect(instance.limiteMaximo).to.be(expectedValueLiteral);
      });

      it('should have the property nome (base name: "nome")', function() {
        // TODO: update the code to test the property nome
        expect(instance).to.have.property('nome');
        // expect(instance.nome).to.be(expectedValueLiteral);
      });

      it('should have the property sigla (base name: "sigla")', function() {
        // TODO: update the code to test the property sigla
        expect(instance).to.have.property('sigla');
        // expect(instance.sigla).to.be(expectedValueLiteral);
      });

      it('should have the property itemProdutoId (base name: "itemProdutoId")', function() {
        // TODO: update the code to test the property itemProdutoId
        expect(instance).to.have.property('itemProdutoId');
        // expect(instance.itemProdutoId).to.be(expectedValueLiteral);
      });

      it('should have the property coberturaId (base name: "coberturaId")', function() {
        // TODO: update the code to test the property coberturaId
        expect(instance).to.have.property('coberturaId');
        // expect(instance.coberturaId).to.be(expectedValueLiteral);
      });

      it('should have the property tipoItemProduto (base name: "tipoItemProduto")', function() {
        // TODO: update the code to test the property tipoItemProduto
        expect(instance).to.have.property('tipoItemProduto');
        // expect(instance.tipoItemProduto).to.be(expectedValueLiteral);
      });

      it('should have the property tipoRelacaoSegurado (base name: "tipoRelacaoSegurado")', function() {
        // TODO: update the code to test the property tipoRelacaoSegurado
        expect(instance).to.have.property('tipoRelacaoSegurado');
        // expect(instance.tipoRelacaoSegurado).to.be(expectedValueLiteral);
      });

      it('should have the property tipoGrupoItemProduto (base name: "tipoGrupoItemProduto")', function() {
        // TODO: update the code to test the property tipoGrupoItemProduto
        expect(instance).to.have.property('tipoGrupoItemProduto');
        // expect(instance.tipoGrupoItemProduto).to.be(expectedValueLiteral);
      });

      it('should have the property dependenteItemProdutoId (base name: "dependenteItemProdutoId")', function() {
        // TODO: update the code to test the property dependenteItemProdutoId
        expect(instance).to.have.property('dependenteItemProdutoId');
        // expect(instance.dependenteItemProdutoId).to.be(expectedValueLiteral);
      });

      it('should have the property valorServico (base name: "valorServico")', function() {
        // TODO: update the code to test the property valorServico
        expect(instance).to.have.property('valorServico');
        // expect(instance.valorServico).to.be(expectedValueLiteral);
      });

      it('should have the property valorRepassadoAoCliente (base name: "valorRepassadoAoCliente")', function() {
        // TODO: update the code to test the property valorRepassadoAoCliente
        expect(instance).to.have.property('valorRepassadoAoCliente');
        // expect(instance.valorRepassadoAoCliente).to.be(expectedValueLiteral);
      });

      it('should have the property taxaPremio (base name: "taxaPremio")', function() {
        // TODO: update the code to test the property taxaPremio
        expect(instance).to.have.property('taxaPremio');
        // expect(instance.taxaPremio).to.be(expectedValueLiteral);
      });

      it('should have the property percentualCoberturaReferencia (base name: "percentualCoberturaReferencia")', function() {
        // TODO: update the code to test the property percentualCoberturaReferencia
        expect(instance).to.have.property('percentualCoberturaReferencia');
        // expect(instance.percentualCoberturaReferencia).to.be(expectedValueLiteral);
      });

      it('should have the property tipoNaturezaServico (base name: "tipoNaturezaServico")', function() {
        // TODO: update the code to test the property tipoNaturezaServico
        expect(instance).to.have.property('tipoNaturezaServico');
        // expect(instance.tipoNaturezaServico).to.be(expectedValueLiteral);
      });

      it('should have the property dependenciasItemProduto (base name: "dependenciasItemProduto")', function() {
        // TODO: update the code to test the property dependenciasItemProduto
        expect(instance).to.have.property('dependenciasItemProduto');
        // expect(instance.dependenciasItemProduto).to.be(expectedValueLiteral);
      });

    });
  });

}));
