/*
 * API.Seguradora
 * Serviços de Negócios expostos através de RESTful services, para integrações com parceiros e agilidade no desenvolvimento interno de softwares da companhia.
 *
 * OpenAPI spec version: v1
 * Contact: integracaosistemas@mongeralaegon.com.br
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 *
 * Swagger Codegen version: 2.4.9
 *
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', '../../src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require('../../src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.Apiseguradora);
  }
}(this, function(expect, Apiseguradora) {
  'use strict';

  var instance;

  describe('(package)', function() {
    describe('APISeguradoraContratoV1SimulacaoSimulacaoCobertura', function() {
      beforeEach(function() {
        instance = new Apiseguradora.APISeguradoraContratoV1SimulacaoSimulacaoCobertura();
      });

      it('should create an instance of APISeguradoraContratoV1SimulacaoSimulacaoCobertura', function() {
        // TODO: update the code to test APISeguradoraContratoV1SimulacaoSimulacaoCobertura
        expect(instance).to.be.a(Apiseguradora.APISeguradoraContratoV1SimulacaoSimulacaoCobertura);
      });

      it('should have the property id (base name: "id")', function() {
        // TODO: update the code to test the property id
        expect(instance).to.have.property('id');
        // expect(instance.id).to.be(expectedValueLiteral);
      });

      it('should have the property descricao (base name: "descricao")', function() {
        // TODO: update the code to test the property descricao
        expect(instance).to.have.property('descricao');
        // expect(instance.descricao).to.be(expectedValueLiteral);
      });

      it('should have the property tipoId (base name: "tipoId")', function() {
        // TODO: update the code to test the property tipoId
        expect(instance).to.have.property('tipoId');
        // expect(instance.tipoId).to.be(expectedValueLiteral);
      });

      it('should have the property capitalBase (base name: "capitalBase")', function() {
        // TODO: update the code to test the property capitalBase
        expect(instance).to.have.property('capitalBase');
        // expect(instance.capitalBase).to.be(expectedValueLiteral);
      });

      it('should have the property causaId (base name: "causaId")', function() {
        // TODO: update the code to test the property causaId
        expect(instance).to.have.property('causaId');
        // expect(instance.causaId).to.be(expectedValueLiteral);
      });

      it('should have the property limite (base name: "limite")', function() {
        // TODO: update the code to test the property limite
        expect(instance).to.have.property('limite');
        // expect(instance.limite).to.be(expectedValueLiteral);
      });

      it('should have the property tipoCapitalBase (base name: "tipoCapitalBase")', function() {
        // TODO: update the code to test the property tipoCapitalBase
        expect(instance).to.have.property('tipoCapitalBase');
        // expect(instance.tipoCapitalBase).to.be(expectedValueLiteral);
      });

      it('should have the property premioBase (base name: "premioBase")', function() {
        // TODO: update the code to test the property premioBase
        expect(instance).to.have.property('premioBase');
        // expect(instance.premioBase).to.be(expectedValueLiteral);
      });

      it('should have the property prazoCerto (base name: "prazoCerto")', function() {
        // TODO: update the code to test the property prazoCerto
        expect(instance).to.have.property('prazoCerto');
        // expect(instance.prazoCerto).to.be(expectedValueLiteral);
      });

      it('should have the property prazoRenda (base name: "prazoRenda")', function() {
        // TODO: update the code to test the property prazoRenda
        expect(instance).to.have.property('prazoRenda');
        // expect(instance.prazoRenda).to.be(expectedValueLiteral);
      });

      it('should have the property prazoDecrescimo (base name: "prazoDecrescimo")', function() {
        // TODO: update the code to test the property prazoDecrescimo
        expect(instance).to.have.property('prazoDecrescimo');
        // expect(instance.prazoDecrescimo).to.be(expectedValueLiteral);
      });

      it('should have the property prazoPagamentoAntecipado (base name: "prazoPagamentoAntecipado")', function() {
        // TODO: update the code to test the property prazoPagamentoAntecipado
        expect(instance).to.have.property('prazoPagamentoAntecipado');
        // expect(instance.prazoPagamentoAntecipado).to.be(expectedValueLiteral);
      });

      it('should have the property idadePagamentoAntecipado (base name: "idadePagamentoAntecipado")', function() {
        // TODO: update the code to test the property idadePagamentoAntecipado
        expect(instance).to.have.property('idadePagamentoAntecipado');
        // expect(instance.idadePagamentoAntecipado).to.be(expectedValueLiteral);
      });

      it('should have the property custoFixo (base name: "custoFixo")', function() {
        // TODO: update the code to test the property custoFixo
        expect(instance).to.have.property('custoFixo');
        // expect(instance.custoFixo).to.be(expectedValueLiteral);
      });

      it('should have the property dependenciasCoberturaProdutos (base name: "dependenciasCoberturaProdutos")', function() {
        // TODO: update the code to test the property dependenciasCoberturaProdutos
        expect(instance).to.have.property('dependenciasCoberturaProdutos');
        // expect(instance.dependenciasCoberturaProdutos).to.be(expectedValueLiteral);
      });

      it('should have the property valorMinimoCapitalContratacao (base name: "valorMinimoCapitalContratacao")', function() {
        // TODO: update the code to test the property valorMinimoCapitalContratacao
        expect(instance).to.have.property('valorMinimoCapitalContratacao');
        // expect(instance.valorMinimoCapitalContratacao).to.be(expectedValueLiteral);
      });

      it('should have the property valorLimiteCapitalReferencia (base name: "valorLimiteCapitalReferencia")', function() {
        // TODO: update the code to test the property valorLimiteCapitalReferencia
        expect(instance).to.have.property('valorLimiteCapitalReferencia');
        // expect(instance.valorLimiteCapitalReferencia).to.be(expectedValueLiteral);
      });

    });
  });

}));
