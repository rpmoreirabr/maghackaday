/*
 * API.Seguradora
 * Serviços de Negócios expostos através de RESTful services, para integrações com parceiros e agilidade no desenvolvimento interno de softwares da companhia.
 *
 * OpenAPI spec version: v1
 * Contact: integracaosistemas@mongeralaegon.com.br
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 *
 * Swagger Codegen version: 2.4.9
 *
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', '../../src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require('../../src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.Apiseguradora);
  }
}(this, function(expect, Apiseguradora) {
  'use strict';

  var instance;

  describe('(package)', function() {
    describe('APISeguradoraContratoV1ProdutoCobertura', function() {
      beforeEach(function() {
        instance = new Apiseguradora.APISeguradoraContratoV1ProdutoCobertura();
      });

      it('should create an instance of APISeguradoraContratoV1ProdutoCobertura', function() {
        // TODO: update the code to test APISeguradoraContratoV1ProdutoCobertura
        expect(instance).to.be.a(Apiseguradora.APISeguradoraContratoV1ProdutoCobertura);
      });

      it('should have the property id (base name: "id")', function() {
        // TODO: update the code to test the property id
        expect(instance).to.have.property('id');
        // expect(instance.id).to.be(expectedValueLiteral);
      });

      it('should have the property itemProdutoId (base name: "itemProdutoId")', function() {
        // TODO: update the code to test the property itemProdutoId
        expect(instance).to.have.property('itemProdutoId');
        // expect(instance.itemProdutoId).to.be(expectedValueLiteral);
      });

      it('should have the property descricao (base name: "descricao")', function() {
        // TODO: update the code to test the property descricao
        expect(instance).to.have.property('descricao');
        // expect(instance.descricao).to.be(expectedValueLiteral);
      });

      it('should have the property descricaoComercial (base name: "descricaoComercial")', function() {
        // TODO: update the code to test the property descricaoComercial
        expect(instance).to.have.property('descricaoComercial');
        // expect(instance.descricaoComercial).to.be(expectedValueLiteral);
      });

      it('should have the property obrigatoria (base name: "obrigatoria")', function() {
        // TODO: update the code to test the property obrigatoria
        expect(instance).to.have.property('obrigatoria');
        // expect(instance.obrigatoria).to.be(expectedValueLiteral);
      });

      it('should have the property prazoCerto (base name: "prazoCerto")', function() {
        // TODO: update the code to test the property prazoCerto
        expect(instance).to.have.property('prazoCerto');
        // expect(instance.prazoCerto).to.be(expectedValueLiteral);
      });

      it('should have the property prazoRenda (base name: "prazoRenda")', function() {
        // TODO: update the code to test the property prazoRenda
        expect(instance).to.have.property('prazoRenda');
        // expect(instance.prazoRenda).to.be(expectedValueLiteral);
      });

      it('should have the property tipo (base name: "tipo")', function() {
        // TODO: update the code to test the property tipo
        expect(instance).to.have.property('tipo');
        // expect(instance.tipo).to.be(expectedValueLiteral);
      });

      it('should have the property tipoRelacaoSegurado (base name: "tipoRelacaoSegurado")', function() {
        // TODO: update the code to test the property tipoRelacaoSegurado
        expect(instance).to.have.property('tipoRelacaoSegurado');
        // expect(instance.tipoRelacaoSegurado).to.be(expectedValueLiteral);
      });

      it('should have the property idadeEntrada (base name: "idadeEntrada")', function() {
        // TODO: update the code to test the property idadeEntrada
        expect(instance).to.have.property('idadeEntrada');
        // expect(instance.idadeEntrada).to.be(expectedValueLiteral);
      });

      it('should have the property idadeSaida (base name: "idadeSaida")', function() {
        // TODO: update the code to test the property idadeSaida
        expect(instance).to.have.property('idadeSaida');
        // expect(instance.idadeSaida).to.be(expectedValueLiteral);
      });

      it('should have the property idadeExclusao (base name: "idadeExclusao")', function() {
        // TODO: update the code to test the property idadeExclusao
        expect(instance).to.have.property('idadeExclusao');
        // expect(instance.idadeExclusao).to.be(expectedValueLiteral);
      });

      it('should have the property indicarBeneficiario (base name: "indicarBeneficiario")', function() {
        // TODO: update the code to test the property indicarBeneficiario
        expect(instance).to.have.property('indicarBeneficiario');
        // expect(instance.indicarBeneficiario).to.be(expectedValueLiteral);
      });

      it('should have the property valorFixo (base name: "valorFixo")', function() {
        // TODO: update the code to test the property valorFixo
        expect(instance).to.have.property('valorFixo');
        // expect(instance.valorFixo).to.be(expectedValueLiteral);
      });

      it('should have the property capitalFixo (base name: "capitalFixo")', function() {
        // TODO: update the code to test the property capitalFixo
        expect(instance).to.have.property('capitalFixo');
        // expect(instance.capitalFixo).to.be(expectedValueLiteral);
      });

      it('should have the property causas (base name: "causas")', function() {
        // TODO: update the code to test the property causas
        expect(instance).to.have.property('causas');
        // expect(instance.causas).to.be(expectedValueLiteral);
      });

      it('should have the property coberturaPrincipal (base name: "coberturaPrincipal")', function() {
        // TODO: update the code to test the property coberturaPrincipal
        expect(instance).to.have.property('coberturaPrincipal');
        // expect(instance.coberturaPrincipal).to.be(expectedValueLiteral);
      });

      it('should have the property exigeDPS (base name: "exigeDPS")', function() {
        // TODO: update the code to test the property exigeDPS
        expect(instance).to.have.property('exigeDPS');
        // expect(instance.exigeDPS).to.be(expectedValueLiteral);
      });

      it('should have the property fundos (base name: "fundos")', function() {
        // TODO: update the code to test the property fundos
        expect(instance).to.have.property('fundos');
        // expect(instance.fundos).to.be(expectedValueLiteral);
      });

      it('should have the property profissoesRecusadas (base name: "profissoesRecusadas")', function() {
        // TODO: update the code to test the property profissoesRecusadas
        expect(instance).to.have.property('profissoesRecusadas');
        // expect(instance.profissoesRecusadas).to.be(expectedValueLiteral);
      });

      it('should have the property ufsRecusadas (base name: "ufsRecusadas")', function() {
        // TODO: update the code to test the property ufsRecusadas
        expect(instance).to.have.property('ufsRecusadas');
        // expect(instance.ufsRecusadas).to.be(expectedValueLiteral);
      });

      it('should have the property prazoDecrescimo (base name: "prazoDecrescimo")', function() {
        // TODO: update the code to test the property prazoDecrescimo
        expect(instance).to.have.property('prazoDecrescimo');
        // expect(instance.prazoDecrescimo).to.be(expectedValueLiteral);
      });

      it('should have the property idadeAntecipacao (base name: "idadeAntecipacao")', function() {
        // TODO: update the code to test the property idadeAntecipacao
        expect(instance).to.have.property('idadeAntecipacao');
        // expect(instance.idadeAntecipacao).to.be(expectedValueLiteral);
      });

      it('should have the property tempoAntecipacao (base name: "tempoAntecipacao")', function() {
        // TODO: update the code to test the property tempoAntecipacao
        expect(instance).to.have.property('tempoAntecipacao');
        // expect(instance.tempoAntecipacao).to.be(expectedValueLiteral);
      });

      it('should have the property dependenciasCoberturaProdutos (base name: "dependenciasCoberturaProdutos")', function() {
        // TODO: update the code to test the property dependenciasCoberturaProdutos
        expect(instance).to.have.property('dependenciasCoberturaProdutos');
        // expect(instance.dependenciasCoberturaProdutos).to.be(expectedValueLiteral);
      });

      it('should have the property valorMinimoCapitalContratacao (base name: "valorMinimoCapitalContratacao")', function() {
        // TODO: update the code to test the property valorMinimoCapitalContratacao
        expect(instance).to.have.property('valorMinimoCapitalContratacao');
        // expect(instance.valorMinimoCapitalContratacao).to.be(expectedValueLiteral);
      });

      it('should have the property valorLimiteCapitalReferencia (base name: "valorLimiteCapitalReferencia")', function() {
        // TODO: update the code to test the property valorLimiteCapitalReferencia
        expect(instance).to.have.property('valorLimiteCapitalReferencia');
        // expect(instance.valorLimiteCapitalReferencia).to.be(expectedValueLiteral);
      });

    });
  });

}));
