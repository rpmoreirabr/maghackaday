/*
 * API.Seguradora
 * Serviços de Negócios expostos através de RESTful services, para integrações com parceiros e agilidade no desenvolvimento interno de softwares da companhia.
 *
 * OpenAPI spec version: v1
 * Contact: integracaosistemas@mongeralaegon.com.br
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 *
 * Swagger Codegen version: 2.4.9
 *
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', '../../src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require('../../src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.Apiseguradora);
  }
}(this, function(expect, Apiseguradora) {
  'use strict';

  var instance;

  describe('(package)', function() {
    describe('APISeguradoraContratoV1PoliticaAceitacaoPoliticaAceitacao', function() {
      beforeEach(function() {
        instance = new Apiseguradora.APISeguradoraContratoV1PoliticaAceitacaoPoliticaAceitacao();
      });

      it('should create an instance of APISeguradoraContratoV1PoliticaAceitacaoPoliticaAceitacao', function() {
        // TODO: update the code to test APISeguradoraContratoV1PoliticaAceitacaoPoliticaAceitacao
        expect(instance).to.be.a(Apiseguradora.APISeguradoraContratoV1PoliticaAceitacaoPoliticaAceitacao);
      });

      it('should have the property id (base name: "id")', function() {
        // TODO: update the code to test the property id
        expect(instance).to.have.property('id');
        // expect(instance.id).to.be(expectedValueLiteral);
      });

      it('should have the property dataUltimaAlteracao (base name: "dataUltimaAlteracao")', function() {
        // TODO: update the code to test the property dataUltimaAlteracao
        expect(instance).to.have.property('dataUltimaAlteracao');
        // expect(instance.dataUltimaAlteracao).to.be(expectedValueLiteral);
      });

      it('should have the property imcMinimoRecusa (base name: "imcMinimoRecusa")', function() {
        // TODO: update the code to test the property imcMinimoRecusa
        expect(instance).to.have.property('imcMinimoRecusa');
        // expect(instance.imcMinimoRecusa).to.be(expectedValueLiteral);
      });

      it('should have the property imcMaximoRecusa (base name: "imcMaximoRecusa")', function() {
        // TODO: update the code to test the property imcMaximoRecusa
        expect(instance).to.have.property('imcMaximoRecusa');
        // expect(instance.imcMaximoRecusa).to.be(expectedValueLiteral);
      });

      it('should have the property imcMinimoExame (base name: "imcMinimoExame")', function() {
        // TODO: update the code to test the property imcMinimoExame
        expect(instance).to.have.property('imcMinimoExame');
        // expect(instance.imcMinimoExame).to.be(expectedValueLiteral);
      });

      it('should have the property imcMaximoExame (base name: "imcMaximoExame")', function() {
        // TODO: update the code to test the property imcMaximoExame
        expect(instance).to.have.property('imcMaximoExame');
        // expect(instance.imcMaximoExame).to.be(expectedValueLiteral);
      });

      it('should have the property cigarrosRecusa (base name: "cigarrosRecusa")', function() {
        // TODO: update the code to test the property cigarrosRecusa
        expect(instance).to.have.property('cigarrosRecusa');
        // expect(instance.cigarrosRecusa).to.be(expectedValueLiteral);
      });

      it('should have the property cigarrosExame (base name: "cigarrosExame")', function() {
        // TODO: update the code to test the property cigarrosExame
        expect(instance).to.have.property('cigarrosExame');
        // expect(instance.cigarrosExame).to.be(expectedValueLiteral);
      });

      it('should have the property limitesOperacionaisPorProfissao (base name: "limitesOperacionaisPorProfissao")', function() {
        // TODO: update the code to test the property limitesOperacionaisPorProfissao
        expect(instance).to.have.property('limitesOperacionaisPorProfissao');
        // expect(instance.limitesOperacionaisPorProfissao).to.be(expectedValueLiteral);
      });

      it('should have the property limitesOperacionaisPorRenda (base name: "limitesOperacionaisPorRenda")', function() {
        // TODO: update the code to test the property limitesOperacionaisPorRenda
        expect(instance).to.have.property('limitesOperacionaisPorRenda');
        // expect(instance.limitesOperacionaisPorRenda).to.be(expectedValueLiteral);
      });

      it('should have the property limitesOperacionaisPorFaixaEtaria (base name: "limitesOperacionaisPorFaixaEtaria")', function() {
        // TODO: update the code to test the property limitesOperacionaisPorFaixaEtaria
        expect(instance).to.have.property('limitesOperacionaisPorFaixaEtaria');
        // expect(instance.limitesOperacionaisPorFaixaEtaria).to.be(expectedValueLiteral);
      });

    });
  });

}));
