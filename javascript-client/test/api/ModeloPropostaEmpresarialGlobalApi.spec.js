/*
 * API.Seguradora
 * Serviços de Negócios expostos através de RESTful services, para integrações com parceiros e agilidade no desenvolvimento interno de softwares da companhia.
 *
 * OpenAPI spec version: v1
 * Contact: integracaosistemas@mongeralaegon.com.br
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 *
 * Swagger Codegen version: 2.4.9
 *
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', '../../src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require('../../src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.Apiseguradora);
  }
}(this, function(expect, Apiseguradora) {
  'use strict';

  var instance;

  beforeEach(function() {
    instance = new Apiseguradora.ModeloPropostaEmpresarialGlobalApi();
  });

  describe('(package)', function() {
    describe('ModeloPropostaEmpresarialGlobalApi', function() {
      describe('apiversionmodeloPropostaEmpresarialGlobalcnpjParceirocnpjParceiroGET', function() {
        it('should call apiversionmodeloPropostaEmpresarialGlobalcnpjParceirocnpjParceiroGET successfully', function(done) {
          // TODO: uncomment, update parameter values for apiversionmodeloPropostaEmpresarialGlobalcnpjParceirocnpjParceiroGET call and complete the assertions
          /*
          var version = "version_example";
          var authorization = "authorization_example";
          var opts = {};
          opts.pesquisaCnpjParceiro = "pesquisaCnpjParceiro_example";
          opts.pesquisaCodigoModeloProposta = "pesquisaCodigoModeloProposta_example";

          instance.apiversionmodeloPropostaEmpresarialGlobalcnpjParceirocnpjParceiroGET(version, authorization, opts, function(error, data, response) {
            if (error) {
              done(error);
              return;
            }
            // TODO: update response assertions
            expect(data).to.be.a(Apiseguradora.APISeguradoraHelperResultadoDaOperacaoRestSystemCollectionsGenericListAPISeguradoraContratoV1ModeloPropostaEmpresarialGlobalModeloPropostaEmpresarialGlobal);
            {
              let dataCtr = data.valor;
              expect(dataCtr).to.be.an(Array);
              expect(dataCtr).to.not.be.empty();
              for (let p in dataCtr) {
                let data = dataCtr[p];
                expect(data).to.be.a(Apiseguradora.APISeguradoraContratoV1ModeloPropostaEmpresarialGlobalModeloPropostaEmpresarialGlobal);
                expect(data.cnpjParceiro).to.be.a('number');
                expect(data.cnpjParceiro).to.be("0");
                expect(data.codigoModeloProposta).to.be.a('string');
                expect(data.codigoModeloProposta).to.be("");
                expect(data.numeroContrato).to.be.a('number');
                expect(data.numeroContrato).to.be(0);
                expect(data.numeroApolice).to.be.a('number');
                expect(data.numeroApolice).to.be("0");
                expect(data.dataInicioParceria).to.be.a(Date);
                expect(data.dataInicioParceria).to.be(new Date());
                expect(data.classeGrupoSeguravel).to.be.a(Apiseguradora.APISeguradoraContratoV1ModeloPropostaEmpresarialTipo);
                      expect(data.classeGrupoSeguravel.id).to.be.a('number');
                  expect(data.classeGrupoSeguravel.id).to.be(0);
                  expect(data.classeGrupoSeguravel.sigla).to.be.a('string');
                  expect(data.classeGrupoSeguravel.sigla).to.be("");
                  expect(data.classeGrupoSeguravel.descricao).to.be.a('string');
                  expect(data.classeGrupoSeguravel.descricao).to.be("");
                  expect(data.classeGrupoSeguravel.ordem).to.be.a('number');
                  expect(data.classeGrupoSeguravel.ordem).to.be(0);
                  expect(data.classeGrupoSeguravel.excluido).to.be.a('boolean');
                  expect(data.classeGrupoSeguravel.excluido).to.be(false);
                expect(data.origemContrato).to.be.a(Apiseguradora.APISeguradoraContratoV1ModeloPropostaEmpresarialTipo);
                      expect(data.origemContrato.id).to.be.a('number');
                  expect(data.origemContrato.id).to.be(0);
                  expect(data.origemContrato.sigla).to.be.a('string');
                  expect(data.origemContrato.sigla).to.be("");
                  expect(data.origemContrato.descricao).to.be.a('string');
                  expect(data.origemContrato.descricao).to.be("");
                  expect(data.origemContrato.ordem).to.be.a('number');
                  expect(data.origemContrato.ordem).to.be(0);
                  expect(data.origemContrato.excluido).to.be.a('boolean');
                  expect(data.origemContrato.excluido).to.be(false);
                {
                  let dataCtr = data.gruposDeElegibilidade;
                  expect(dataCtr).to.be.an(Array);
                  expect(dataCtr).to.not.be.empty();
                  for (let p in dataCtr) {
                    let data = dataCtr[p];
                    expect(data).to.be.a(Apiseguradora.APISeguradoraContratoV1ModeloPropostaEmpresarialGlobalGrupoElegibilidadeGlobal);
                    {
                      let dataCtr = data.atividadesEconomicas;
                      expect(dataCtr).to.be.an(Array);
                      expect(dataCtr).to.not.be.empty();
                      for (let p in dataCtr) {
                        let data = dataCtr[p];
                        expect(data).to.be.a(Apiseguradora.APISeguradoraContratoV1ModeloPropostaEmpresarialAtividadeEconomica);
                        expect(data.id).to.be.a('number');
                        expect(data.id).to.be("0");
                        expect(data.descricao).to.be.a('string');
                        expect(data.descricao).to.be("");
                        expect(data.sigla).to.be.a('string');
                        expect(data.sigla).to.be("");
                      }
                    }
                    expect(data.descricao).to.be.a('string');
                    expect(data.descricao).to.be("");
                    expect(data.grupoDeRisco).to.be.a('number');
                    expect(data.grupoDeRisco).to.be(0);
                    {
                      let dataCtr = data.modulos;
                      expect(dataCtr).to.be.an(Array);
                      expect(dataCtr).to.not.be.empty();
                      for (let p in dataCtr) {
                        let data = dataCtr[p];
                        expect(data).to.be.a(Apiseguradora.APISeguradoraContratoV1ModeloPropostaEmpresarialGlobalModuloGlobal);
                        expect(data.identificador).to.be.a('number');
                        expect(data.identificador).to.be(0);
                        expect(data.descricao).to.be.a('string');
                        expect(data.descricao).to.be("");
                        expect(data.numero).to.be.a('number');
                        expect(data.numero).to.be(0);
                        {
                          let dataCtr = data.coberturas;
                          expect(dataCtr).to.be.an(Array);
                          expect(dataCtr).to.not.be.empty();
                          for (let p in dataCtr) {
                            let data = dataCtr[p];
                            expect(data).to.be.a(Apiseguradora.APISeguradoraContratoV1ModeloPropostaEmpresarialGlobalCoberturaProdutoNegociadoGlobal);
                            expect(data.coberturaReferencia).to.be.a('boolean');
                            expect(data.coberturaReferencia).to.be(false);
                            expect(data.coberturaOpcional).to.be.a('boolean');
                            expect(data.coberturaOpcional).to.be(false);
                            expect(data.possuiCapitalIndependente).to.be.a('boolean');
                            expect(data.possuiCapitalIndependente).to.be(false);
                            expect(data.dataInicioComercializacao).to.be.a(Date);
                            expect(data.dataInicioComercializacao).to.be(new Date());
                            expect(data.dataFimComercializacao).to.be.a(Date);
                            expect(data.dataFimComercializacao).to.be(new Date());
                            expect(data.capitalMinimo).to.be.a('number');
                            expect(data.capitalMinimo).to.be(0.0);
                            expect(data.capitalMaximo).to.be.a('number');
                            expect(data.capitalMaximo).to.be(0.0);
                            expect(data.idadeMinima).to.be.a('number');
                            expect(data.idadeMinima).to.be(0);
                            expect(data.idadeMaxima).to.be.a('number');
                            expect(data.idadeMaxima).to.be(0);
                            expect(data.limiteMinimo).to.be.a('number');
                            expect(data.limiteMinimo).to.be(0.0);
                            expect(data.limiteMaximo).to.be.a('number');
                            expect(data.limiteMaximo).to.be(0.0);
                            expect(data.nome).to.be.a('string');
                            expect(data.nome).to.be("");
                            expect(data.sigla).to.be.a('string');
                            expect(data.sigla).to.be("");
                            expect(data.itemProdutoId).to.be.a('number');
                            expect(data.itemProdutoId).to.be(0);
                            expect(data.coberturaId).to.be.a('number');
                            expect(data.coberturaId).to.be(0);
                            expect(data.tipoItemProduto).to.be.a(Apiseguradora.APISeguradoraContratoV1ModeloPropostaEmpresarialTipo);
                                  expect(data.tipoItemProduto.id).to.be.a('number');
                              expect(data.tipoItemProduto.id).to.be(0);
                              expect(data.tipoItemProduto.sigla).to.be.a('string');
                              expect(data.tipoItemProduto.sigla).to.be("");
                              expect(data.tipoItemProduto.descricao).to.be.a('string');
                              expect(data.tipoItemProduto.descricao).to.be("");
                              expect(data.tipoItemProduto.ordem).to.be.a('number');
                              expect(data.tipoItemProduto.ordem).to.be(0);
                              expect(data.tipoItemProduto.excluido).to.be.a('boolean');
                              expect(data.tipoItemProduto.excluido).to.be(false);
                            expect(data.tipoRelacaoSegurado).to.be.a(Apiseguradora.APISeguradoraContratoV1ModeloPropostaEmpresarialTipo);
                                  expect(data.tipoRelacaoSegurado.id).to.be.a('number');
                              expect(data.tipoRelacaoSegurado.id).to.be(0);
                              expect(data.tipoRelacaoSegurado.sigla).to.be.a('string');
                              expect(data.tipoRelacaoSegurado.sigla).to.be("");
                              expect(data.tipoRelacaoSegurado.descricao).to.be.a('string');
                              expect(data.tipoRelacaoSegurado.descricao).to.be("");
                              expect(data.tipoRelacaoSegurado.ordem).to.be.a('number');
                              expect(data.tipoRelacaoSegurado.ordem).to.be(0);
                              expect(data.tipoRelacaoSegurado.excluido).to.be.a('boolean');
                              expect(data.tipoRelacaoSegurado.excluido).to.be(false);
                            expect(data.tipoGrupoItemProduto).to.be.a(Apiseguradora.APISeguradoraContratoV1ModeloPropostaEmpresarialTipo);
                                  expect(data.tipoGrupoItemProduto.id).to.be.a('number');
                              expect(data.tipoGrupoItemProduto.id).to.be(0);
                              expect(data.tipoGrupoItemProduto.sigla).to.be.a('string');
                              expect(data.tipoGrupoItemProduto.sigla).to.be("");
                              expect(data.tipoGrupoItemProduto.descricao).to.be.a('string');
                              expect(data.tipoGrupoItemProduto.descricao).to.be("");
                              expect(data.tipoGrupoItemProduto.ordem).to.be.a('number');
                              expect(data.tipoGrupoItemProduto.ordem).to.be(0);
                              expect(data.tipoGrupoItemProduto.excluido).to.be.a('boolean');
                              expect(data.tipoGrupoItemProduto.excluido).to.be(false);
                            expect(data.dependenteItemProdutoId).to.be.a('number');
                            expect(data.dependenteItemProdutoId).to.be(0);
                            expect(data.valorServico).to.be.a('number');
                            expect(data.valorServico).to.be(0.0);
                            expect(data.valorRepassadoAoCliente).to.be.a('number');
                            expect(data.valorRepassadoAoCliente).to.be(0.0);
                            expect(data.taxaPremio).to.be.a('number');
                            expect(data.taxaPremio).to.be(0.0);
                            expect(data.percentualCoberturaReferencia).to.be.a('number');
                            expect(data.percentualCoberturaReferencia).to.be(0.0);
                            expect(data.tipoNaturezaServico).to.be.a(Apiseguradora.APISeguradoraContratoV1ModeloPropostaEmpresarialTipo);
                                  expect(data.tipoNaturezaServico.id).to.be.a('number');
                              expect(data.tipoNaturezaServico.id).to.be(0);
                              expect(data.tipoNaturezaServico.sigla).to.be.a('string');
                              expect(data.tipoNaturezaServico.sigla).to.be("");
                              expect(data.tipoNaturezaServico.descricao).to.be.a('string');
                              expect(data.tipoNaturezaServico.descricao).to.be("");
                              expect(data.tipoNaturezaServico.ordem).to.be.a('number');
                              expect(data.tipoNaturezaServico.ordem).to.be(0);
                              expect(data.tipoNaturezaServico.excluido).to.be.a('boolean');
                              expect(data.tipoNaturezaServico.excluido).to.be(false);
                            {
                              let dataCtr = data.dependenciasItemProduto;
                              expect(dataCtr).to.be.an(Array);
                              expect(dataCtr).to.not.be.empty();
                              for (let p in dataCtr) {
                                let data = dataCtr[p];
                                expect(data).to.be.a(Apiseguradora.APISeguradoraContratoV1ModeloPropostaEmpresarialGlobalDependenciaItemProduto);
                                expect(data.itemProdutoDependenteId).to.be.a('number');
                                expect(data.itemProdutoDependenteId).to.be(0);
                                expect(data.tipoDependencia).to.be.a(Apiseguradora.APISeguradoraContratoV1ModeloPropostaEmpresarialTipo);
                                      expect(data.tipoDependencia.id).to.be.a('number');
                                  expect(data.tipoDependencia.id).to.be(0);
                                  expect(data.tipoDependencia.sigla).to.be.a('string');
                                  expect(data.tipoDependencia.sigla).to.be("");
                                  expect(data.tipoDependencia.descricao).to.be.a('string');
                                  expect(data.tipoDependencia.descricao).to.be("");
                                  expect(data.tipoDependencia.ordem).to.be.a('number');
                                  expect(data.tipoDependencia.ordem).to.be(0);
                                  expect(data.tipoDependencia.excluido).to.be.a('boolean');
                                  expect(data.tipoDependencia.excluido).to.be(false);
                              }
                            }
                          }
                        }
                        expect(data.limitesOperacionais).to.be.a(Apiseguradora.APISeguradoraContratoV1ModeloPropostaEmpresarialGlobalLimitesOperacionaisGlobais);
                              expect(data.limitesOperacionais.capitalMinimo).to.be.a('number');
                          expect(data.limitesOperacionais.capitalMinimo).to.be(0.0);
                          expect(data.limitesOperacionais.capitalMaximoPrimeiraFatura).to.be.a('number');
                          expect(data.limitesOperacionais.capitalMaximoPrimeiraFatura).to.be(0.0);
                          expect(data.limitesOperacionais.capitalMaximoNovasInclusoes).to.be.a('number');
                          expect(data.limitesOperacionais.capitalMaximoNovasInclusoes).to.be(0.0);
                          expect(data.limitesOperacionais.capitalMaximoAlteracoes).to.be.a('number');
                          expect(data.limitesOperacionais.capitalMaximoAlteracoes).to.be(0.0);
                          expect(data.limitesOperacionais.capitalMaximoIndividual).to.be.a('number');
                          expect(data.limitesOperacionais.capitalMaximoIndividual).to.be(0.0);
                          expect(data.limitesOperacionais.idadeMaximaPrimeiraFatura).to.be.a('number');
                          expect(data.limitesOperacionais.idadeMaximaPrimeiraFatura).to.be(0);
                          expect(data.limitesOperacionais.idadeMaximaAumentoCapital).to.be.a('number');
                          expect(data.limitesOperacionais.idadeMaximaAumentoCapital).to.be(0);
                          expect(data.limitesOperacionais.idadeMaximaDemaisFaturas).to.be.a('number');
                          expect(data.limitesOperacionais.idadeMaximaDemaisFaturas).to.be(0);
                          expect(data.limitesOperacionais.idadeMinimaInclusao).to.be.a('number');
                          expect(data.limitesOperacionais.idadeMinimaInclusao).to.be(0);
                          expect(data.limitesOperacionais.qtdeSalariosMultiploSalarial).to.be.a('number');
                          expect(data.limitesOperacionais.qtdeSalariosMultiploSalarial).to.be(0);
                          expect(data.limitesOperacionais.capitalUniforme).to.be.a('number');
                          expect(data.limitesOperacionais.capitalUniforme).to.be(0.0);
                          expect(data.limitesOperacionais.capitalSeguradoMinimo).to.be.a('number');
                          expect(data.limitesOperacionais.capitalSeguradoMinimo).to.be(0.0);
                          expect(data.limitesOperacionais.capitalSeguradoMaximo).to.be.a('number');
                          expect(data.limitesOperacionais.capitalSeguradoMaximo).to.be(0.0);
                        {
                          let dataCtr = data.cargosDisponiveis;
                          expect(dataCtr).to.be.an(Array);
                          expect(dataCtr).to.not.be.empty();
                          for (let p in dataCtr) {
                            let data = dataCtr[p];
                            expect(data).to.be.a(Apiseguradora.APISeguradoraContratoV1ModeloPropostaEmpresarialCargo);
                            expect(data.id).to.be.a('number');
                            expect(data.id).to.be(0);
                            expect(data.sigla).to.be.a('string');
                            expect(data.sigla).to.be("");
                            expect(data.descricao).to.be.a('string');
                            expect(data.descricao).to.be("");
                            expect(data.codigoExterno).to.be.a('string');
                            expect(data.codigoExterno).to.be("");
                            expect(data.numeroContrato).to.be.a('number');
                            expect(data.numeroContrato).to.be(0);
                          }
                        }
                        expect(data.dataInicioVigencia).to.be.a(Date);
                        expect(data.dataInicioVigencia).to.be(new Date());
                        expect(data.dataFimVigencia).to.be.a(Date);
                        expect(data.dataFimVigencia).to.be(new Date());
                        {
                          let dataCtr = data.limitesPorGrupoSegurado;
                          expect(dataCtr).to.be.an(Array);
                          expect(dataCtr).to.not.be.empty();
                          for (let p in dataCtr) {
                            let data = dataCtr[p];
                            expect(data).to.be.a(Apiseguradora.APISeguradoraContratoV1ModeloPropostaEmpresarialGlobalLimiteCapitalGrupoSegurado);
                            expect(data.tipoGrupoSegurado).to.be.a(Apiseguradora.APISeguradoraContratoV1ModeloPropostaEmpresarialTipo);
                                  expect(data.tipoGrupoSegurado.id).to.be.a('number');
                              expect(data.tipoGrupoSegurado.id).to.be(0);
                              expect(data.tipoGrupoSegurado.sigla).to.be.a('string');
                              expect(data.tipoGrupoSegurado.sigla).to.be("");
                              expect(data.tipoGrupoSegurado.descricao).to.be.a('string');
                              expect(data.tipoGrupoSegurado.descricao).to.be("");
                              expect(data.tipoGrupoSegurado.ordem).to.be.a('number');
                              expect(data.tipoGrupoSegurado.ordem).to.be(0);
                              expect(data.tipoGrupoSegurado.excluido).to.be.a('boolean');
                              expect(data.tipoGrupoSegurado.excluido).to.be(false);
                            expect(data.limite).to.be.a('number');
                            expect(data.limite).to.be(0.0);
                          }
                        }
                      }
                    }
                  }
                }
                expect(data.condicaoOperacional).to.be.a(Apiseguradora.APISeguradoraContratoV1ModeloPropostaEmpresarialGlobalCondicaoOperacional);
                      {
                    let dataCtr = data.condicaoOperacional.dias;
                    expect(dataCtr).to.be.an(Array);
                    expect(dataCtr).to.not.be.empty();
                    for (let p in dataCtr) {
                      let data = dataCtr[p];
                      expect(data).to.be.a('number');
                      expect(data).to.be(0);
                    }
                  }
                  {
                    let dataCtr = data.condicaoOperacional.formasCobranca;
                    expect(dataCtr).to.be.an(Array);
                    expect(dataCtr).to.not.be.empty();
                    for (let p in dataCtr) {
                      let data = dataCtr[p];
                      expect(data).to.be.a(Apiseguradora.APISeguradoraContratoV1ModeloPropostaEmpresarialTipo);
                      expect(data.id).to.be.a('number');
                      expect(data.id).to.be(0);
                      expect(data.sigla).to.be.a('string');
                      expect(data.sigla).to.be("");
                      expect(data.descricao).to.be.a('string');
                      expect(data.descricao).to.be("");
                      expect(data.ordem).to.be.a('number');
                      expect(data.ordem).to.be(0);
                      expect(data.excluido).to.be.a('boolean');
                      expect(data.excluido).to.be(false);
                    }
                  }
                  {
                    let dataCtr = data.condicaoOperacional.periodicidades;
                    expect(dataCtr).to.be.an(Array);
                    expect(dataCtr).to.not.be.empty();
                    for (let p in dataCtr) {
                      let data = dataCtr[p];
                      expect(data).to.be.a(Apiseguradora.APISeguradoraContratoV1ModeloPropostaEmpresarialTipo);
                      expect(data.id).to.be.a('number');
                      expect(data.id).to.be(0);
                      expect(data.sigla).to.be.a('string');
                      expect(data.sigla).to.be("");
                      expect(data.descricao).to.be.a('string');
                      expect(data.descricao).to.be("");
                      expect(data.ordem).to.be.a('number');
                      expect(data.ordem).to.be(0);
                      expect(data.excluido).to.be.a('boolean');
                      expect(data.excluido).to.be(false);
                    }
                  }
              }
            }
            {
              let dataCtr = data.mensagens;
              expect(dataCtr).to.be.an(Array);
              expect(dataCtr).to.not.be.empty();
              for (let p in dataCtr) {
                let data = dataCtr[p];
                expect(data).to.be.a('string');
                expect(data).to.be("");
              }
            }
            expect(data.houveErrosDuranteProcessamento).to.be.a('boolean');
            expect(data.houveErrosDuranteProcessamento).to.be(false);

            done();
          });
          */
          // TODO: uncomment and complete method invocation above, then delete this line and the next:
          done();
        });
      });
    });
  });

}));
