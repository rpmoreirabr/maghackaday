/*
 * API.Seguradora
 * Serviços de Negócios expostos através de RESTful services, para integrações com parceiros e agilidade no desenvolvimento interno de softwares da companhia.
 *
 * OpenAPI spec version: v1
 * Contact: integracaosistemas@mongeralaegon.com.br
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 *
 * Swagger Codegen version: 2.4.9
 *
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', '../../src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require('../../src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.Apiseguradora);
  }
}(this, function(expect, Apiseguradora) {
  'use strict';

  var instance;

  beforeEach(function() {
    instance = new Apiseguradora.SimulacaoApi();
  });

  describe('(package)', function() {
    describe('SimulacaoApi', function() {
      describe('apiversionsimulacaocnpjcnpjcodigoModeloPropostacodigoModeloPropostaPOST', function() {
        it('should call apiversionsimulacaocnpjcnpjcodigoModeloPropostacodigoModeloPropostaPOST successfully', function(done) {
          // TODO: uncomment, update parameter values for apiversionsimulacaocnpjcnpjcodigoModeloPropostacodigoModeloPropostaPOST call and complete the assertions
          /*
          var proponente = new Apiseguradora.APISeguradoraContratoV1SimulacaoResultadoSimulacaoProposta();
          proponente.simulacoes = [new Apiseguradora.APISeguradoraContratoV1SimulacaoSimulacaoProposta()];
          proponente.simulacoes[0].proponente = new Apiseguradora.APISeguradoraContratoV1SimulacaoSimulacaoProponente();
          proponente.simulacoes[0].proponente.tipoRelacaoSeguradoId = 0;
          proponente.simulacoes[0].proponente.nome = "";
          proponente.simulacoes[0].proponente.cpf = "";
          proponente.simulacoes[0].proponente.dataNascimento = new Date();
          proponente.simulacoes[0].proponente.sexoId = 0;
          proponente.simulacoes[0].proponente.profissaoCbo = "";
          proponente.simulacoes[0].proponente.renda = 0.0;
          proponente.simulacoes[0].proponente.uf = "";
          proponente.simulacoes[0].proponente.origem = "";
          proponente.simulacoes[0].proponente.patrimonio = 0.0;
          proponente.simulacoes[0].proponente.declaracaoIRId = 0;
          proponente.simulacoes[0].proponente.despesasEducacao = 0.0;
          proponente.simulacoes[0].proponente.despesasMensais = 0.0;
          proponente.simulacoes[0].proponente.formaContato = "";
          proponente.simulacoes[0].proponente.emails = [""];
          proponente.simulacoes[0].proponente.historicoDoenca = [new Apiseguradora.APISeguradoraContratoV1SimulacaoSimulacaoHistoricoDoenca()];
          proponente.simulacoes[0].proponente.historicoDoenca[0].codigoCID10 = "";
          proponente.simulacoes[0].proponente.historicoDoenca[0].descricao = "";
          proponente.simulacoes[0].proponente.historicoDoencaFamiliar = [new Apiseguradora.APISeguradoraContratoV1SimulacaoSimulacaoHistoricoDoenca()];
          proponente.simulacoes[0].proponente.historicoDoencaFamiliar[0].codigoCID10 = "";
          proponente.simulacoes[0].proponente.historicoDoencaFamiliar[0].descricao = "";
          proponente.simulacoes[0].proponente.investimentos = 0.0;
          proponente.simulacoes[0].proponente.medicamentos = [new Apiseguradora.APISeguradoraContratoV1SimulacaoSimulacaoMedicamento()];
          proponente.simulacoes[0].proponente.medicamentos[0].id = "";
          proponente.simulacoes[0].proponente.medicamentos[0].descricao = "";
          proponente.simulacoes[0].proponente.telefones = [new Apiseguradora.APISeguradoraContratoV1SimulacaoSimulacaoTelefone()];
          proponente.simulacoes[0].proponente.telefones[0].ddd = 0;
          proponente.simulacoes[0].proponente.telefones[0].numero = 0;
          proponente.simulacoes[0].proponente.classeRisco = "";
          proponente.simulacoes[0].produtos = [new Apiseguradora.APISeguradoraContratoV1SimulacaoSimulacaoProduto()];
          proponente.simulacoes[0].produtos[0].idProduto = 0;
          proponente.simulacoes[0].produtos[0].descricao = "";
          proponente.simulacoes[0].produtos[0].descricaoComercial = "";
          proponente.simulacoes[0].produtos[0].coberturas = [new Apiseguradora.APISeguradoraContratoV1SimulacaoSimulacaoCobertura()];
          proponente.simulacoes[0].produtos[0].coberturas[0].id = 0;
          proponente.simulacoes[0].produtos[0].coberturas[0].descricao = "";
          proponente.simulacoes[0].produtos[0].coberturas[0].tipoId = 0;
          proponente.simulacoes[0].produtos[0].coberturas[0].capitalBase = 0.0;
          proponente.simulacoes[0].produtos[0].coberturas[0].causaId = "";
          proponente.simulacoes[0].produtos[0].coberturas[0].limite = 0.0;
          proponente.simulacoes[0].produtos[0].coberturas[0].tipoCapitalBase = "";
          proponente.simulacoes[0].produtos[0].coberturas[0].premioBase = 0.0;
          proponente.simulacoes[0].produtos[0].coberturas[0].prazoCerto = 0;
          proponente.simulacoes[0].produtos[0].coberturas[0].prazoRenda = 0;
          proponente.simulacoes[0].produtos[0].coberturas[0].prazoDecrescimo = 0;
          proponente.simulacoes[0].produtos[0].coberturas[0].prazoPagamentoAntecipado = 0;
          proponente.simulacoes[0].produtos[0].coberturas[0].idadePagamentoAntecipado = 0;
          proponente.simulacoes[0].produtos[0].coberturas[0].custoFixo = 0.0;
          proponente.simulacoes[0].produtos[0].coberturas[0].dependenciasCoberturaProdutos = [new Apiseguradora.APISeguradoraContratoV1SimulacaoSimulacaoDependenciaCoberturaProduto()];
          proponente.simulacoes[0].produtos[0].coberturas[0].dependenciasCoberturaProdutos[0].itemProdutoId = 0;
          proponente.simulacoes[0].produtos[0].coberturas[0].dependenciasCoberturaProdutos[0].tipo = 0;
          proponente.simulacoes[0].produtos[0].coberturas[0].dependenciasCoberturaProdutos[0].percentualMinimoReferencia = 0.0;
          proponente.simulacoes[0].produtos[0].coberturas[0].dependenciasCoberturaProdutos[0].percentualMaximoReferencia = 0.0;
          proponente.simulacoes[0].produtos[0].coberturas[0].valorMinimoCapitalContratacao = 0.0;
          proponente.simulacoes[0].produtos[0].coberturas[0].valorLimiteCapitalReferencia = 0.0;
          proponente.simulacoes[0].periodicidadeCobrancaId = 0;
          proponente.simulacoes[0].prazoDecrescimo = 0;
          proponente.simulacoes[0].prazoPagamentoAntecipado = 0;
          proponente.simulacoes[0].idadePagamentoAntecipado = 0;
          proponente.simulacoes[0].prazoCerto = 0;
          proponente.simulacoes[0].prazoRenda = 0;
          proponente.simulacoes[0].ticketMinimo = 0.0;
          var cnpj = "cnpj_example";
          var codigoModeloProposta = "codigoModeloProposta_example";
          var version = "version_example";
          var authorization = "authorization_example";

          instance.apiversionsimulacaocnpjcnpjcodigoModeloPropostacodigoModeloPropostaPOST(proponente, cnpj, codigoModeloProposta, version, authorization, function(error, data, response) {
            if (error) {
              done(error);
              return;
            }
            // TODO: update response assertions
            expect(data).to.be.a(Apiseguradora.APISeguradoraHelperResultadoDaOperacaoRestAPISeguradoraContratoV1SimulacaoResultadoSimulacaoProposta);
            expect(data.valor).to.be.a(Apiseguradora.APISeguradoraContratoV1SimulacaoResultadoSimulacaoProposta);
                  {
                let dataCtr = data.valor.simulacoes;
                expect(dataCtr).to.be.an(Array);
                expect(dataCtr).to.not.be.empty();
                for (let p in dataCtr) {
                  let data = dataCtr[p];
                  expect(data).to.be.a(Apiseguradora.APISeguradoraContratoV1SimulacaoSimulacaoProposta);
                  expect(data.proponente).to.be.a(Apiseguradora.APISeguradoraContratoV1SimulacaoSimulacaoProponente);
                        expect(data.proponente.tipoRelacaoSeguradoId).to.be.a('number');
                    expect(data.proponente.tipoRelacaoSeguradoId).to.be(0);
                    expect(data.proponente.nome).to.be.a('string');
                    expect(data.proponente.nome).to.be("");
                    expect(data.proponente.cpf).to.be.a('string');
                    expect(data.proponente.cpf).to.be("");
                    expect(data.proponente.dataNascimento).to.be.a(Date);
                    expect(data.proponente.dataNascimento).to.be(new Date());
                    expect(data.proponente.sexoId).to.be.a('number');
                    expect(data.proponente.sexoId).to.be(0);
                    expect(data.proponente.profissaoCbo).to.be.a('string');
                    expect(data.proponente.profissaoCbo).to.be("");
                    expect(data.proponente.renda).to.be.a('number');
                    expect(data.proponente.renda).to.be(0.0);
                    expect(data.proponente.uf).to.be.a('string');
                    expect(data.proponente.uf).to.be("");
                    expect(data.proponente.origem).to.be.a('string');
                    expect(data.proponente.origem).to.be("");
                    expect(data.proponente.patrimonio).to.be.a('number');
                    expect(data.proponente.patrimonio).to.be(0.0);
                    expect(data.proponente.declaracaoIRId).to.be.a('number');
                    expect(data.proponente.declaracaoIRId).to.be(0);
                    expect(data.proponente.despesasEducacao).to.be.a('number');
                    expect(data.proponente.despesasEducacao).to.be(0.0);
                    expect(data.proponente.despesasMensais).to.be.a('number');
                    expect(data.proponente.despesasMensais).to.be(0.0);
                    expect(data.proponente.formaContato).to.be.a('string');
                    expect(data.proponente.formaContato).to.be("");
                    {
                      let dataCtr = data.proponente.emails;
                      expect(dataCtr).to.be.an(Array);
                      expect(dataCtr).to.not.be.empty();
                      for (let p in dataCtr) {
                        let data = dataCtr[p];
                        expect(data).to.be.a('string');
                        expect(data).to.be("");
                      }
                    }
                    {
                      let dataCtr = data.proponente.historicoDoenca;
                      expect(dataCtr).to.be.an(Array);
                      expect(dataCtr).to.not.be.empty();
                      for (let p in dataCtr) {
                        let data = dataCtr[p];
                        expect(data).to.be.a(Apiseguradora.APISeguradoraContratoV1SimulacaoSimulacaoHistoricoDoenca);
                        expect(data.codigoCID10).to.be.a('string');
                        expect(data.codigoCID10).to.be("");
                        expect(data.descricao).to.be.a('string');
                        expect(data.descricao).to.be("");
                      }
                    }
                    {
                      let dataCtr = data.proponente.historicoDoencaFamiliar;
                      expect(dataCtr).to.be.an(Array);
                      expect(dataCtr).to.not.be.empty();
                      for (let p in dataCtr) {
                        let data = dataCtr[p];
                        expect(data).to.be.a(Apiseguradora.APISeguradoraContratoV1SimulacaoSimulacaoHistoricoDoenca);
                        expect(data.codigoCID10).to.be.a('string');
                        expect(data.codigoCID10).to.be("");
                        expect(data.descricao).to.be.a('string');
                        expect(data.descricao).to.be("");
                      }
                    }
                    expect(data.proponente.investimentos).to.be.a('number');
                    expect(data.proponente.investimentos).to.be(0.0);
                    {
                      let dataCtr = data.proponente.medicamentos;
                      expect(dataCtr).to.be.an(Array);
                      expect(dataCtr).to.not.be.empty();
                      for (let p in dataCtr) {
                        let data = dataCtr[p];
                        expect(data).to.be.a(Apiseguradora.APISeguradoraContratoV1SimulacaoSimulacaoMedicamento);
                        expect(data.id).to.be.a('string');
                        expect(data.id).to.be("");
                        expect(data.descricao).to.be.a('string');
                        expect(data.descricao).to.be("");
                      }
                    }
                    {
                      let dataCtr = data.proponente.telefones;
                      expect(dataCtr).to.be.an(Array);
                      expect(dataCtr).to.not.be.empty();
                      for (let p in dataCtr) {
                        let data = dataCtr[p];
                        expect(data).to.be.a(Apiseguradora.APISeguradoraContratoV1SimulacaoSimulacaoTelefone);
                        expect(data.ddd).to.be.a('number');
                        expect(data.ddd).to.be(0);
                        expect(data.numero).to.be.a('number');
                        expect(data.numero).to.be(0);
                      }
                    }
                    expect(data.proponente.classeRisco).to.be.a('string');
                    expect(data.proponente.classeRisco).to.be("");
                  {
                    let dataCtr = data.produtos;
                    expect(dataCtr).to.be.an(Array);
                    expect(dataCtr).to.not.be.empty();
                    for (let p in dataCtr) {
                      let data = dataCtr[p];
                      expect(data).to.be.a(Apiseguradora.APISeguradoraContratoV1SimulacaoSimulacaoProduto);
                      expect(data.idProduto).to.be.a('number');
                      expect(data.idProduto).to.be(0);
                      expect(data.descricao).to.be.a('string');
                      expect(data.descricao).to.be("");
                      expect(data.descricaoComercial).to.be.a('string');
                      expect(data.descricaoComercial).to.be("");
                      {
                        let dataCtr = data.coberturas;
                        expect(dataCtr).to.be.an(Array);
                        expect(dataCtr).to.not.be.empty();
                        for (let p in dataCtr) {
                          let data = dataCtr[p];
                          expect(data).to.be.a(Apiseguradora.APISeguradoraContratoV1SimulacaoSimulacaoCobertura);
                          expect(data.id).to.be.a('number');
                          expect(data.id).to.be(0);
                          expect(data.descricao).to.be.a('string');
                          expect(data.descricao).to.be("");
                          expect(data.tipoId).to.be.a('number');
                          expect(data.tipoId).to.be(0);
                          expect(data.capitalBase).to.be.a('number');
                          expect(data.capitalBase).to.be(0.0);
                          expect(data.causaId).to.be.a('string');
                          expect(data.causaId).to.be("");
                          expect(data.limite).to.be.a('number');
                          expect(data.limite).to.be(0.0);
                          expect(data.tipoCapitalBase).to.be.a('string');
                          expect(data.tipoCapitalBase).to.be("");
                          expect(data.premioBase).to.be.a('number');
                          expect(data.premioBase).to.be(0.0);
                          expect(data.prazoCerto).to.be.a('number');
                          expect(data.prazoCerto).to.be(0);
                          expect(data.prazoRenda).to.be.a('number');
                          expect(data.prazoRenda).to.be(0);
                          expect(data.prazoDecrescimo).to.be.a('number');
                          expect(data.prazoDecrescimo).to.be(0);
                          expect(data.prazoPagamentoAntecipado).to.be.a('number');
                          expect(data.prazoPagamentoAntecipado).to.be(0);
                          expect(data.idadePagamentoAntecipado).to.be.a('number');
                          expect(data.idadePagamentoAntecipado).to.be(0);
                          expect(data.custoFixo).to.be.a('number');
                          expect(data.custoFixo).to.be(0.0);
                          {
                            let dataCtr = data.dependenciasCoberturaProdutos;
                            expect(dataCtr).to.be.an(Array);
                            expect(dataCtr).to.not.be.empty();
                            for (let p in dataCtr) {
                              let data = dataCtr[p];
                              expect(data).to.be.a(Apiseguradora.APISeguradoraContratoV1SimulacaoSimulacaoDependenciaCoberturaProduto);
                              expect(data.itemProdutoId).to.be.a('number');
                              expect(data.itemProdutoId).to.be(0);
                              expect(data.tipo).to.be.a('number');
                              expect(data.tipo).to.be(0);
                              expect(data.percentualMinimoReferencia).to.be.a('number');
                              expect(data.percentualMinimoReferencia).to.be(0.0);
                              expect(data.percentualMaximoReferencia).to.be.a('number');
                              expect(data.percentualMaximoReferencia).to.be(0.0);
                            }
                          }
                          expect(data.valorMinimoCapitalContratacao).to.be.a('number');
                          expect(data.valorMinimoCapitalContratacao).to.be(0.0);
                          expect(data.valorLimiteCapitalReferencia).to.be.a('number');
                          expect(data.valorLimiteCapitalReferencia).to.be(0.0);
                        }
                      }
                    }
                  }
                  expect(data.periodicidadeCobrancaId).to.be.a('number');
                  expect(data.periodicidadeCobrancaId).to.be(0);
                  expect(data.prazoDecrescimo).to.be.a('number');
                  expect(data.prazoDecrescimo).to.be(0);
                  expect(data.prazoPagamentoAntecipado).to.be.a('number');
                  expect(data.prazoPagamentoAntecipado).to.be(0);
                  expect(data.idadePagamentoAntecipado).to.be.a('number');
                  expect(data.idadePagamentoAntecipado).to.be(0);
                  expect(data.prazoCerto).to.be.a('number');
                  expect(data.prazoCerto).to.be(0);
                  expect(data.prazoRenda).to.be.a('number');
                  expect(data.prazoRenda).to.be(0);
                  expect(data.ticketMinimo).to.be.a('number');
                  expect(data.ticketMinimo).to.be(0.0);
                }
              }
            {
              let dataCtr = data.mensagens;
              expect(dataCtr).to.be.an(Array);
              expect(dataCtr).to.not.be.empty();
              for (let p in dataCtr) {
                let data = dataCtr[p];
                expect(data).to.be.a('string');
                expect(data).to.be("");
              }
            }
            expect(data.houveErrosDuranteProcessamento).to.be.a('boolean');
            expect(data.houveErrosDuranteProcessamento).to.be(false);

            done();
          });
          */
          // TODO: uncomment and complete method invocation above, then delete this line and the next:
          done();
        });
      });
    });
  });

}));
